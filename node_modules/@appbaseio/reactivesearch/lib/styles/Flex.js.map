{"version":3,"sources":["../../src/styles/Flex.js"],"names":["leftLabel","rightLabel","topLabel","bottomLabel","border","colors","theme","borderColor","Flex","props","inline","labelPosition","iconPosition","showBorder","justifyContent","alignItems","flex","direction","basis","textColor"],"mappings":";;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,oFAAN;;AAKA,IAAMC,6FAAN;;AAKA,IAAMC,mEAAN;;AAIA,IAAMC,8EAAN;;AAIA,IAAMC,SAAS,SAATA,MAAS;AAAA,KAAYC,MAAZ,QAAGC,KAAH,CAAYD,MAAZ;AAAA,6DACMA,OAAOE,WAAP,IAAsB,MAD5B;AAAA;AAAA,CAAf;;AAIA,IAAMC,gDAAc,KAAd;AAAA;AAAA,eACM;AAAA,QAAUC,MAAMC,MAAN,GAAe,aAAf,GAA+B,MAAzC;AAAA,CADN,OAEH;AAAA,QAAS,CAACD,MAAME,aAAN,KAAwB,MAAxB,IAAkCF,MAAMG,YAAN,KAAuB,OAA1D,KAAsEZ,SAA/E;AAAA,CAFG,OAGH;AAAA,QAAS,CAACS,MAAME,aAAN,KAAwB,OAAxB,IAAmCF,MAAMG,YAAN,KAAuB,MAA3D,KAAsEX,UAA/E;AAAA,CAHG,OAIH;AAAA,QAAUQ,MAAME,aAAN,KAAwB,KAAzB,IAAmCT,QAA5C;AAAA,CAJG,OAKH;AAAA,QAAUO,MAAME,aAAN,KAAwB,QAAzB,IAAsCR,WAA/C;AAAA,CALG,OAMH;AAAA,QAASM,MAAMI,UAAN,IAAoBT,MAA7B;AAAA,CANG,OAQH;AAAA,QAASK,MAAMK,cAAN,uDACSL,MAAMK,cADf,MAAT;AAAA,CARG,OAWH;AAAA,QAASL,MAAMM,UAAN,mDACKN,MAAMM,UADX,MAAT;AAAA,CAXG,OAeH;AAAA,QAASN,MAAMO,IAAN,4CACFP,MAAMO,IADJ,MAAT;AAAA,CAfG,OAkBH;AAAA,QAASP,MAAMQ,SAAN,sDACQR,MAAMQ,SADd,MAAT;AAAA,CAlBG,OAqBH;AAAA,QAASR,MAAMS,KAAN,kDACIT,MAAMS,KADV,MAAT;AAAA,CArBG,2CA2BI;AAAA,KAAYb,MAAZ,SAAGC,KAAH,CAAYD,MAAZ;AAAA,QACPA,OAAOE,WAAP,IAAsB,kBAAMF,OAAOc,SAAb,EAAwB,GAAxB,CADf;AAAA,CA3BJ,oCAgCK;AAAA,KAAGb,KAAH,SAAGA,KAAH;AAAA,QAAeA,MAAMD,MAAN,CAAac,SAA5B;AAAA,CAhCL,QAAN;;kBAqCeX,I","file":"Flex.js","sourcesContent":["import styled from 'react-emotion';\nimport { css } from 'emotion';\nimport { shade } from './utils';\n\nconst leftLabel = css`\n\tflex-direction: row;\n\talign-items: center;\n`;\n\nconst rightLabel = css`\n\tflex-direction: row-reverse;\n\talign-items: center;\n`;\n\nconst topLabel = css`\n\tflex-direction: column;\n`;\n\nconst bottomLabel = css`\n\tflex-direction: column-reverse;\n`;\n\nconst border = ({ theme: { colors } }) => css`\n\tborder: 1px solid ${colors.borderColor || '#ccc'};\n`;\n\nconst Flex = styled('div')`\n\tdisplay: ${props => (props.inline ? 'inline-flex' : 'flex')};\n\t${props => (props.labelPosition === 'left' || props.iconPosition === 'right') && leftLabel};\n\t${props => (props.labelPosition === 'right' || props.iconPosition === 'left') && rightLabel};\n\t${props => (props.labelPosition === 'top') && topLabel};\n\t${props => (props.labelPosition === 'bottom') && bottomLabel};\n\t${props => props.showBorder && border};\n\n\t${props => props.justifyContent && css`\n\t\tjustify-content: ${props.justifyContent};\n\t`};\n\t${props => props.alignItems && css`\n\t\talign-items: ${props.alignItems};\n\t`};\n\n\t${props => props.flex && css`\n\t\tflex: ${props.flex};\n\t`};\n\t${props => props.direction && css`\n\t\tflex-direction: ${props.direction};\n\t`};\n\t${props => props.basis && css`\n\t\tflex-basis: ${props.basis};\n\t`};\n\n\tsvg.cancel-icon {\n\t\tcursor: pointer;\n\t\tfill: ${({ theme: { colors } }) =>\n\t\t(colors.borderColor || shade(colors.textColor, 0.3))};\n\t\tflex-basis: 30px;\n\n\t\t&:hover {\n\t\t\tfill: ${({ theme }) => theme.colors.textColor};\n\t\t}\n\t}\n`;\n\nexport default Flex;\n"]}