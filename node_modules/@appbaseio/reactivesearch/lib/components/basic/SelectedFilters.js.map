{"version":3,"sources":["../../../src/components/basic/SelectedFilters.js"],"names":["SelectedFilters","remove","component","props","setValue","renderValue","value","isArray","length","arrayToRender","map","item","join","label","key","distance","location","render","selectedValues","theme","hasValues","style","className","Object","keys","filter","components","includes","id","showFilter","index","Array","innerClass","showClearAll","clearValues","clearAllLabel","propTypes","func","string","title","bool","defaultProps","mapStateToProps","state","mapDispatchtoProps","dispatch"],"mappings":"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","file":"SelectedFilters.js","sourcesContent":["import React, { Component } from 'react';\nimport { withTheme } from 'emotion-theming';\n\nimport { setValue, clearValues } from '@appbaseio/reactivecore/lib/actions';\nimport types from '@appbaseio/reactivecore/lib/utils/types';\nimport { getClassName } from '@appbaseio/reactivecore/lib/utils/helper';\nimport Button, { filters } from '../../styles/Button';\nimport Container from '../../styles/Container';\nimport { connect } from '../../utils';\n\nclass SelectedFilters extends Component {\n\tremove = (component) => {\n\t\tthis.props.setValue(component, null);\n\t};\n\n\trenderValue = (value, isArray) => {\n\t\tif (isArray && value.length) {\n\t\t\tconst arrayToRender = value.map(item => this.renderValue(item));\n\t\t\treturn arrayToRender.join(', ');\n\t\t} else if (value && typeof value === 'object') {\n\t\t\t// TODO: support for NestedList\n\t\t\tlet label = (typeof value.label === 'string' ? value.label : value.value) || value.key || value.distance || null;\n\t\t\tif (value.location) {\n\t\t\t\tlabel = `${value.location} - ${label}`;\n\t\t\t}\n\t\t\treturn label;\n\t\t}\n\t\treturn value;\n\t}\n\n\trender() {\n\t\tconst { selectedValues, theme } = this.props;\n\t\tlet hasValues = false;\n\n\t\treturn (\n\t\t\t<Container style={this.props.style} className={`${filters(theme)} ${this.props.className || ''}`}>\n\t\t\t\t{\n\t\t\t\t\tObject.keys(selectedValues)\n\t\t\t\t\t\t.filter(id => this.props.components.includes(id) && selectedValues[id].showFilter)\n\t\t\t\t\t\t.map((component, index) => {\n\t\t\t\t\t\t\tconst { label, value } = selectedValues[component];\n\t\t\t\t\t\t\tconst isArray = Array.isArray(value);\n\n\t\t\t\t\t\t\tif (label && ((isArray && value.length) || (!isArray && value))) {\n\t\t\t\t\t\t\t\thasValues = true;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'button') || null}\n\t\t\t\t\t\t\t\t\t\tkey={`${component}-${index}`} // eslint-disable-line\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.remove(component)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t{selectedValues[component].label}: {this.renderValue(value, isArray)}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span>&#x2715;</span>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tthis.props.showClearAll && hasValues\n\t\t\t\t\t\t? (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'button') || null}\n\t\t\t\t\t\t\t\tonClick={this.props.clearValues}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.props.clearAllLabel}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nSelectedFilters.propTypes = {\n\tclearValues: types.func,\n\tsetValue: types.func,\n\tcomponents: types.components,\n\tselectedValues: types.selectedValues,\n\tclassName: types.string,\n\tclearAllLabel: types.title,\n\tinnerClass: types.style,\n\tshowClearAll: types.bool,\n\tstyle: types.style,\n\ttheme: types.style,\n};\n\nSelectedFilters.defaultProps = {\n\tclassName: null,\n\tclearAllLabel: 'Clear All',\n\tshowClearAll: true,\n\tstyle: {},\n};\n\nconst mapStateToProps = state => ({\n\tcomponents: state.components,\n\tselectedValues: state.selectedValues,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n\tclearValues: () => (dispatch(clearValues())),\n\tsetValue: (component, value) => dispatch(setValue(component, value)),\n});\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchtoProps,\n)(withTheme(SelectedFilters));\n"]}