{"version":3,"sources":["../../../src/components/basic/TextField.js"],"names":["TextField","props","state","currentValue","selectedValue","locked","setQueryListener","componentId","onQueryChange","componentWillMount","addComponent","setReact","setValue","defaultSelected","componentWillReceiveProps","nextProps","react","dataField","updateQuery","componentWillUnmount","removeComponent","watchComponent","render","style","className","title","innerClass","placeholder","handleChange","onBlur","onFocus","onKeyPress","onKeyDown","onKeyUp","autoFocus","innerRef","themePreset","showClear","renderIcons","defaultQuery","value","trim","match","handleTextChange","debounce","isDefaultValue","beforeValueChange","performUpdate","setState","onValueChange","query","customQuery","label","filterLabel","showFilter","URLParams","e","target","clearValue","renderCancelIcon","clearIcon","propTypes","funcRequired","bool","func","string","children","stringRequired","number","ref","defaultProps","mapStateToProps","selectedValues","config","mapDispatchtoProps","dispatch","component","updateQueryObject","beforeQueryChange"],"mappings":"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","file":"TextField.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n\taddComponent,\n\tremoveComponent,\n\twatchComponent,\n\tupdateQuery,\n\tsetQueryListener,\n} from '@appbaseio/reactivecore/lib/actions';\nimport {\n\tdebounce,\n\tcheckValueChange,\n\tcheckPropChange,\n\tgetClassName,\n} from '@appbaseio/reactivecore/lib/utils/helper';\nimport types from '@appbaseio/reactivecore/lib/utils/types';\n\nimport Input, { suggestionsContainer } from '../../styles/Input';\nimport InputIcon from '../../styles/InputIcon';\nimport CancelSvg from '../shared/CancelSvg';\nimport Title from '../../styles/Title';\nimport Container from '../../styles/Container';\nimport { connect } from '../../utils';\n\nclass TextField extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrentValue: props.selectedValue || '',\n\t\t};\n\t\tthis.locked = false;\n\t\tprops.setQueryListener(props.componentId, props.onQueryChange, null);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.props.addComponent(this.props.componentId);\n\t\tthis.setReact(this.props);\n\n\t\tif (this.props.selectedValue) {\n\t\t\tthis.setValue(this.props.selectedValue, true);\n\t\t} else if (this.props.defaultSelected) {\n\t\t\tthis.setValue(this.props.defaultSelected, true);\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tcheckPropChange(this.props.react, nextProps.react, () => {\n\t\t\tthis.setReact(nextProps);\n\t\t});\n\n\t\tcheckPropChange(this.props.dataField, nextProps.dataField, () => {\n\t\t\tthis.updateQuery(this.state.currentValue, nextProps);\n\t\t});\n\n\t\tif (this.props.defaultSelected !== nextProps.defaultSelected) {\n\t\t\tthis.setValue(nextProps.defaultSelected, true, nextProps);\n\t\t} else if (\n\t\t\t// since, selectedValue will be updated when currentValue changes,\n\t\t\t// we must only check for the changes introduced by\n\t\t\t// clear action from SelectedFilters component in which case,\n\t\t\t// the currentValue will never match the updated selectedValue\n\t\t\tthis.props.selectedValue !== nextProps.selectedValue\n\t\t\t&& this.state.currentValue !== nextProps.selectedValue\n\t\t) {\n\t\t\tthis.setValue(nextProps.selectedValue || '', true, nextProps);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.removeComponent(this.props.componentId);\n\t}\n\n\tsetReact(props) {\n\t\tif (props.react) {\n\t\t\tprops.watchComponent(props.componentId, props.react);\n\t\t}\n\t}\n\n\tstatic defaultQuery = (value, props) => {\n\t\tif (value && value.trim() !== '') {\n\t\t\treturn {\n\t\t\t\tmatch: {\n\t\t\t\t\t[props.dataField]: value,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n\n\thandleTextChange = debounce((value) => {\n\t\tthis.updateQuery(value, this.props);\n\t}, this.props.debounce);\n\n\tsetValue = (value, isDefaultValue = false, props = this.props) => {\n\t\t// ignore state updates when component is locked\n\t\tif (props.beforeValueChange && this.locked) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.locked = true;\n\t\tconst performUpdate = () => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentValue: value,\n\t\t\t}, () => {\n\t\t\t\tif (isDefaultValue) {\n\t\t\t\t\tthis.updateQuery(value, props);\n\t\t\t\t} else {\n\t\t\t\t\t// debounce for handling text while typing\n\t\t\t\t\tthis.handleTextChange(value);\n\t\t\t\t}\n\t\t\t\tthis.locked = false;\n\t\t\t\tif (props.onValueChange) props.onValueChange(value);\n\t\t\t});\n\t\t};\n\t\tcheckValueChange(\n\t\t\tprops.componentId,\n\t\t\tvalue,\n\t\t\tprops.beforeValueChange,\n\t\t\tperformUpdate,\n\t\t);\n\t};\n\n\tupdateQuery = (value, props) => {\n\t\tconst query = props.customQuery || TextField.defaultQuery;\n\n\t\tprops.updateQuery({\n\t\t\tcomponentId: props.componentId,\n\t\t\tquery: query(value, props),\n\t\t\tvalue,\n\t\t\tlabel: props.filterLabel,\n\t\t\tshowFilter: props.showFilter,\n\t\t\tURLParams: props.URLParams,\n\t\t});\n\t};\n\n\thandleChange = (e) => {\n\t\tthis.setValue(e.target.value);\n\t};\n\n\tclearValue = () => {\n\t\tthis.setValue('', true);\n\t};\n\n\trenderCancelIcon = () => {\n\t\tif (this.props.showClear) {\n\t\t\treturn this.props.clearIcon || <CancelSvg />;\n\t\t}\n\t\treturn null;\n\t}\n\n\trenderIcons = () => (\n\t\t<div>\n\t\t\t{\n\t\t\t\tthis.state.currentValue && this.props.showClear\n\t\t\t\t&& (\n\t\t\t\t\t<InputIcon\n\t\t\t\t\t\tonClick={this.clearValue}\n\t\t\t\t\t\ticonPosition=\"right\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.renderCancelIcon()}\n\t\t\t\t\t</InputIcon>\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n\t);\n\n\trender() {\n\t\treturn (\n\t\t\t<Container style={this.props.style} className={this.props.className}>\n\t\t\t\t{this.props.title && <Title className={getClassName(this.props.innerClass, 'title') || null}>{this.props.title}</Title>}\n\t\t\t\t<div className={suggestionsContainer}>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'input') || null}\n\t\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tvalue={this.state.currentValue}\n\t\t\t\t\t\tonBlur={this.props.onBlur}\n\t\t\t\t\t\tonFocus={this.props.onFocus}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoFocus={this.props.autoFocus}\n\t\t\t\t\t\tinnerRef={this.props.innerRef}\n\t\t\t\t\t\tthemePreset={this.props.themePreset}\n\t\t\t\t\t\tshowClear={this.props.showClear}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.renderIcons()}\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nTextField.propTypes = {\n\taddComponent: types.funcRequired,\n\tremoveComponent: types.funcRequired,\n\tsetQueryListener: types.funcRequired,\n\tupdateQuery: types.funcRequired,\n\twatchComponent: types.funcRequired,\n\tselectedValue: types.selectedValue,\n\t// component props\n\tautoFocus: types.bool,\n\tbeforeValueChange: types.func,\n\tclassName: types.string,\n\tclearIcon: types.children,\n\tcomponentId: types.stringRequired,\n\tcustomQuery: types.func,\n\tdataField: types.stringRequired,\n\tdebounce: types.number,\n\tdefaultSelected: types.string,\n\tfilterLabel: types.string,\n\tinnerClass: types.style,\n\tinnerRef: types.func,\n\tonBlur: types.func,\n\tonFocus: types.func,\n\tonKeyDown: types.func,\n\tonKeyPress: types.func,\n\tonKeyUp: types.func,\n\tonQueryChange: types.func,\n\tonValueChange: types.func,\n\tplaceholder: types.string,\n\treact: types.react,\n\tref: types.func,\n\tshowClear: types.bool,\n\tshowFilter: types.bool,\n\tstyle: types.style,\n\tthemePreset: types.themePreset,\n\ttitle: types.title,\n\tURLParams: types.bool,\n};\n\nTextField.defaultProps = {\n\tclassName: null,\n\tdebounce: 0,\n\tplaceholder: 'Search',\n\tshowClear: false,\n\tshowFilter: true,\n\tstyle: {},\n\tURLParams: false,\n};\n\nconst mapStateToProps = (state, props) => ({\n\tselectedValue: (state.selectedValues[props.componentId]\n\t\t&& state.selectedValues[props.componentId].value) || null,\n\tthemePreset: state.config.themePreset,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n\taddComponent: component => dispatch(addComponent(component)),\n\tremoveComponent: component => dispatch(removeComponent(component)),\n\tupdateQuery: updateQueryObject => dispatch(updateQuery(updateQueryObject)),\n\twatchComponent: (component, react) => dispatch(watchComponent(component, react)),\n\tsetQueryListener: (component, onQueryChange, beforeQueryChange) =>\n\t\tdispatch(setQueryListener(component, onQueryChange, beforeQueryChange)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(TextField);\n"]}