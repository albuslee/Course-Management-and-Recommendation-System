{"version":3,"sources":["../../../src/components/basic/DataController.js"],"names":["DataController","updateQuery","defaultSelected","props","locked","query","customQuery","defaultQuery","performUpdate","componentId","value","label","filterLabel","showFilter","URLParams","onValueChange","beforeValueChange","componentDidMount","addComponent","setQueryListener","onQueryChange","componentWillReceiveProps","nextProps","selectedValue","componentWillUnmount","removeComponent","match_all","render","style","className","children","defaultProps","propTypes","funcRequired","stringRequired","func","string","any","bool","mapStateToProps","state","selectedValues","mapDispatchtoProps","dispatch","component","updateQueryObject","beforeQueryChange"],"mappings":"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","file":"DataController.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n\taddComponent,\n\tremoveComponent,\n\tupdateQuery,\n\tsetQueryListener,\n} from '@appbaseio/reactivecore/lib/actions';\nimport { isEqual, checkValueChange } from '@appbaseio/reactivecore/lib/utils/helper';\n\nimport types from '@appbaseio/reactivecore/lib/utils/types';\n\nimport Container from '../../styles/Container';\nimport { connect } from '../../utils';\n\nclass DataController extends Component {\n\tcomponentDidMount() {\n\t\tthis.locked = false;\n\t\tthis.props.addComponent(this.props.componentId);\n\t\tthis.props.setQueryListener(this.props.componentId, this.props.onQueryChange, null);\n\n\t\tif (this.props.defaultSelected) {\n\t\t\tthis.updateQuery(this.props.defaultSelected, this.props);\n\t\t} else {\n\t\t\tthis.updateQuery(null, this.props);\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (!this.locked) {\n\t\t\tif (!isEqual(this.props.defaultSelected, nextProps.defaultSelected)) {\n\t\t\t\tthis.updateQuery(nextProps.defaultSelected, nextProps);\n\t\t\t} else if (!isEqual(this.props.selectedValue, nextProps.selectedValue)) {\n\t\t\t\tthis.updateQuery(nextProps.selectedValue, nextProps);\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.removeComponent(this.props.componentId);\n\t}\n\n\tstatic defaultQuery() {\n\t\treturn {\n\t\t\tmatch_all: {},\n\t\t};\n\t}\n\n\tupdateQuery = (defaultSelected = null, props) => {\n\t\tthis.locked = true;\n\t\tconst query = props.customQuery || DataController.defaultQuery;\n\n\t\tconst performUpdate = () => {\n\t\t\tprops.updateQuery({\n\t\t\t\tcomponentId: props.componentId,\n\t\t\t\tquery: query(defaultSelected, props),\n\t\t\t\tvalue: defaultSelected,\n\t\t\t\tlabel: props.filterLabel,\n\t\t\t\tshowFilter: props.showFilter,\n\t\t\t\tURLParams: props.URLParams,\n\t\t\t});\n\t\t\tthis.locked = false;\n\t\t\tif (props.onValueChange) props.onValueChange(defaultSelected);\n\t\t};\n\n\t\tcheckValueChange(\n\t\t\tprops.componentId,\n\t\t\tdefaultSelected,\n\t\t\tprops.beforeValueChange,\n\t\t\tperformUpdate,\n\t\t);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Container style={this.props.style} className={this.props.className}>\n\t\t\t\t{this.props.children}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nDataController.defaultProps = {\n\tclassName: null,\n\tshowFilter: true,\n\tstyle: {},\n\tURLParams: false,\n};\n\nDataController.propTypes = {\n\taddComponent: types.funcRequired,\n\tremoveComponent: types.funcRequired,\n\tsetQueryListener: types.funcRequired,\n\tupdateQuery: types.funcRequired,\n\tselectedValue: types.selectedValue,\n\t// component props\n\tcomponentId: types.stringRequired,\n\tbeforeValueChange: types.func,\n\tchildren: types.children,\n\tclassName: types.string,\n\tcustomQuery: types.func,\n\t// DataController can accept any defaultSelected depending on the query used\n\tdefaultSelected: types.any, // eslint-disable-line\n\tfilterLabel: types.string,\n\tonQueryChange: types.func,\n\tonValueChange: types.func,\n\tshowFilter: types.bool,\n\tstyle: types.style,\n\tURLParams: types.bool,\n};\n\nconst mapStateToProps = (state, props) => ({\n\tselectedValue: (\n\t\tstate.selectedValues[props.componentId]\n\t\t&& state.selectedValues[props.componentId].value\n\t) || null,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n\taddComponent: component => dispatch(addComponent(component)),\n\tremoveComponent: component => dispatch(removeComponent(component)),\n\tupdateQuery: updateQueryObject => dispatch(updateQuery(updateQueryObject)),\n\tsetQueryListener: (component, onQueryChange, beforeQueryChange) =>\n\t\tdispatch(setQueryListener(component, onQueryChange, beforeQueryChange)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(DataController);\n"]}