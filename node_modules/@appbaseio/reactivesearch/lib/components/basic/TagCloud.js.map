{"version":3,"sources":["../../../src/components/basic/TagCloud.js"],"names":["TagCloud","props","state","currentValue","options","dataField","buckets","locked","type","internalComponent","componentId","setQueryListener","onQueryChange","componentWillMount","addComponent","updateQueryOptions","setReact","selectedValue","setValue","defaultSelected","componentWillReceiveProps","nextProps","react","setState","updateQuery","Object","keys","multiSelect","length","componentWillUnmount","removeComponent","generateQueryOptions","queryOptions","aggs","terms","field","size","order","sortBy","render","min","max","highestCount","forEach","item","doc_count","style","className","title","innerClass","map","key","e","fontSize","showCount","defaultQuery","value","query","queryFormat","listQuery","queryArray","bool","must","newReact","watchComponent","and","isDefaultValue","beforeValueChange","finalValues","del","rest","performUpdate","onValueChange","customQuery","label","filterLabel","showFilter","URLParams","setQueryOptions","propTypes","funcRequired","func","string","stringRequired","stringOrArray","queryFormatSearch","number","sortByWithCount","defaultProps","mapStateToProps","aggregations","selectedValues","mapDispatchtoProps","dispatch","component","beforeQueryChange","updateQueryObject"],"mappings":"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","file":"TagCloud.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n\taddComponent,\n\tremoveComponent,\n\twatchComponent,\n\tupdateQuery,\n\tsetQueryOptions,\n\tsetQueryListener,\n} from '@appbaseio/reactivecore/lib/actions';\nimport {\n\tisEqual,\n\tgetQueryOptions,\n\tpushToAndClause,\n\tcheckValueChange,\n\tgetAggsOrder,\n\tcheckPropChange,\n\tcheckSomePropChange,\n\tgetClassName,\n\thandleA11yAction,\n} from '@appbaseio/reactivecore/lib/utils/helper';\n\nimport types from '@appbaseio/reactivecore/lib/utils/types';\n\nimport Title from '../../styles/Title';\nimport TagList from '../../styles/TagList';\nimport Container from '../../styles/Container';\nimport { connect } from '../../utils';\n\nclass TagCloud extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrentValue: {},\n\t\t\toptions: (props.options && props.options[props.dataField])\n\t\t\t\t? props.options[props.dataField].buckets\n\t\t\t\t: [],\n\t\t};\n\t\tthis.locked = false;\n\t\tthis.type = 'term';\n\t\tthis.internalComponent = `${props.componentId}__internal`;\n\t\tprops.setQueryListener(props.componentId, props.onQueryChange, null);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.props.addComponent(this.internalComponent);\n\t\tthis.props.addComponent(this.props.componentId);\n\t\tthis.updateQueryOptions(this.props);\n\n\t\tthis.setReact(this.props);\n\n\t\tif (this.props.selectedValue) {\n\t\t\tthis.setValue(this.props.selectedValue, true);\n\t\t} else if (this.props.defaultSelected) {\n\t\t\tthis.setValue(this.props.defaultSelected, true);\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tcheckPropChange(\n\t\t\tthis.props.react,\n\t\t\tnextProps.react,\n\t\t\t() => this.setReact(nextProps),\n\t\t);\n\t\tcheckPropChange(\n\t\t\tthis.props.options,\n\t\t\tnextProps.options,\n\t\t\t() => {\n\t\t\t\tthis.setState({\n\t\t\t\t\toptions: nextProps.options[nextProps.dataField]\n\t\t\t\t\t\t? nextProps.options[nextProps.dataField].buckets\n\t\t\t\t\t\t: [],\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\t\tcheckSomePropChange(\n\t\t\tthis.props,\n\t\t\tnextProps,\n\t\t\t['size', 'sortBy'],\n\t\t\t() => this.updateQueryOptions(nextProps),\n\t\t);\n\n\t\tcheckPropChange(\n\t\t\tthis.props.dataField,\n\t\t\tnextProps.dataField,\n\t\t\t() => {\n\t\t\t\tthis.updateQueryOptions(nextProps);\n\t\t\t\tthis.updateQuery(Object.keys(this.state.currentValue), nextProps);\n\t\t\t},\n\t\t);\n\n\t\tlet selectedValue = Object.keys(this.state.currentValue);\n\n\t\tif (!nextProps.multiSelect) {\n\t\t\tselectedValue = (selectedValue.length && selectedValue[0]) || '';\n\t\t}\n\n\t\tif (!isEqual(this.props.defaultSelected, nextProps.defaultSelected)) {\n\t\t\tthis.setValue(nextProps.defaultSelected, true, nextProps);\n\t\t} else if (!isEqual(selectedValue, nextProps.selectedValue)) {\n\t\t\tthis.setValue(nextProps.selectedValue, true, nextProps);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.removeComponent(this.props.componentId);\n\t\tthis.props.removeComponent(this.internalComponent);\n\t}\n\n\tsetReact = (props) => {\n\t\tconst { react } = props;\n\t\tif (react) {\n\t\t\tconst newReact = pushToAndClause(react, this.internalComponent);\n\t\t\tprops.watchComponent(props.componentId, newReact);\n\t\t} else {\n\t\t\tprops.watchComponent(props.componentId, { and: this.internalComponent });\n\t\t}\n\t};\n\n\tstatic defaultQuery = (value, props) => {\n\t\tlet query = null;\n\t\tlet type = props.queryFormat === 'or' ? 'terms' : 'term';\n\t\ttype = props.multiSelect ? type : 'term';\n\t\tif (value) {\n\t\t\tlet listQuery;\n\t\t\tif (!props.multiSelect || props.queryFormat === 'or') {\n\t\t\t\tlistQuery = {\n\t\t\t\t\t[type]: {\n\t\t\t\t\t\t[props.dataField]: value,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// adds a sub-query with must as an array of objects for each term/value\n\t\t\t\tconst queryArray = value.map(item => (\n\t\t\t\t\t{\n\t\t\t\t\t\t[type]: {\n\t\t\t\t\t\t\t[props.dataField]: item,\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t));\n\t\t\t\tlistQuery = {\n\t\t\t\t\tbool: {\n\t\t\t\t\t\tmust: queryArray,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tquery = value.length ? listQuery : null;\n\t\t}\n\t\treturn query;\n\t};\n\n\tsetValue = (value, isDefaultValue = false, props = this.props) => {\n\t\t// ignore state updates when component is locked\n\t\tif (props.beforeValueChange && this.locked) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.locked = true;\n\t\tlet { currentValue } = this.state;\n\t\tlet finalValues = null;\n\n\t\tif (props.multiSelect) {\n\t\t\tif (isDefaultValue) {\n\t\t\t\tfinalValues = value;\n\t\t\t\tcurrentValue = {};\n\t\t\t\tif (value) {\n\t\t\t\t\tvalue.forEach((item) => {\n\t\t\t\t\t\tcurrentValue[item] = true;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (currentValue[value]) {\n\t\t\t\t\tconst { [value]: del, ...rest } = currentValue;\n\t\t\t\t\tcurrentValue = { ...rest };\n\t\t\t\t} else {\n\t\t\t\t\tcurrentValue[value] = true;\n\t\t\t\t}\n\t\t\t\tfinalValues = Object.keys(currentValue);\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentValue = {\n\t\t\t\t[value]: true,\n\t\t\t};\n\t\t\tfinalValues = value;\n\t\t}\n\n\t\tconst performUpdate = () => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentValue,\n\t\t\t}, () => {\n\t\t\t\tthis.updateQuery(finalValues, props);\n\t\t\t\tthis.locked = false;\n\t\t\t\tif (props.onValueChange) props.onValueChange(finalValues);\n\t\t\t});\n\t\t};\n\n\t\tcheckValueChange(\n\t\t\tprops.componentId,\n\t\t\tfinalValues,\n\t\t\tprops.beforeValueChange,\n\t\t\tperformUpdate,\n\t\t);\n\t};\n\n\tupdateQuery = (value, props) => {\n\t\tconst query = props.customQuery || TagCloud.defaultQuery;\n\n\t\tprops.updateQuery({\n\t\t\tcomponentId: props.componentId,\n\t\t\tquery: query(value, props),\n\t\t\tvalue,\n\t\t\tlabel: props.filterLabel,\n\t\t\tshowFilter: props.showFilter,\n\t\t\tURLParams: props.URLParams,\n\t\t});\n\t};\n\n\tstatic generateQueryOptions(props) {\n\t\tconst queryOptions = getQueryOptions(props);\n\t\tqueryOptions.aggs = {\n\t\t\t[props.dataField]: {\n\t\t\t\tterms: {\n\t\t\t\t\tfield: props.dataField,\n\t\t\t\t\tsize: props.size,\n\t\t\t\t\torder: getAggsOrder(props.sortBy || 'asc'),\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn queryOptions;\n\t}\n\n\tupdateQueryOptions = (props) => {\n\t\tconst queryOptions = TagCloud.generateQueryOptions(props);\n\t\tprops.setQueryOptions(this.internalComponent, queryOptions);\n\t};\n\n\trender() {\n\t\tconst min = 0.8;\n\t\tconst max = 3;\n\n\t\tif (this.state.options.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet highestCount = 0;\n\t\tthis.state.options.forEach((item) => {\n\t\t\thighestCount = item.doc_count > highestCount ? item.doc_count : highestCount;\n\t\t});\n\n\t\treturn (\n\t\t\t<Container style={this.props.style} className={this.props.className}>\n\t\t\t\t{this.props.title && <Title className={getClassName(this.props.innerClass, 'title') || null}>{this.props.title}</Title>}\n\t\t\t\t<TagList className={getClassName(this.props.innerClass, 'list') || null}>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.options\n\t\t\t\t\t\t\t.map((item) => {\n\t\t\t\t\t\t\t\tconst size = ((item.doc_count / highestCount) * (max - min)) + min;\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\tkey={item.key}\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.setValue(item.key)}\n\t\t\t\t\t\t\t\t\t\tonKeyPress={e => handleA11yAction(e, () => this.setValue(item.key))}\n\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: `${size}em` }}\n\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\tthis.state.currentValue[item.key]\n\t\t\t\t\t\t\t\t\t\t\t\t? `${getClassName(this.props.innerClass, 'input') || ''} active`\n\t\t\t\t\t\t\t\t\t\t\t\t: getClassName(this.props.innerClass, 'input')\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\trole=\"menuitem\"\n\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{item.key}\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.props.showCount\n\t\t\t\t\t\t\t\t\t\t\t&& ` (${item.doc_count})`\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</TagList>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nTagCloud.propTypes = {\n\taddComponent: types.funcRequired,\n\tremoveComponent: types.funcRequired,\n\tsetQueryListener: types.funcRequired,\n\tsetQueryOptions: types.funcRequired,\n\tupdateQuery: types.funcRequired,\n\twatchComponent: types.funcRequired,\n\toptions: types.options,\n\tselectedValue: types.selectedValue,\n\t// component props\n\tbeforeValueChange: types.func,\n\tclassName: types.string,\n\tcomponentId: types.stringRequired,\n\tcustomQuery: types.func,\n\tdataField: types.stringRequired,\n\tdefaultSelected: types.stringOrArray,\n\tfilterLabel: types.string,\n\tinnerClass: types.style,\n\tmultiSelect: types.bool,\n\tonQueryChange: types.func,\n\tonValueChange: types.func,\n\tqueryFormat: types.queryFormatSearch,\n\treact: types.react,\n\tshowCount: types.bool,\n\tshowFilter: types.bool,\n\tsize: types.number,\n\tsortBy: types.sortByWithCount,\n\tstyle: types.style,\n\ttitle: types.title,\n\tURLParams: types.bool,\n};\n\nTagCloud.defaultProps = {\n\tclassName: null,\n\tmultiSelect: false,\n\tqueryFormat: 'or',\n\tshowFilter: true,\n\tsize: 100,\n\tsortBy: 'asc',\n\tstyle: {},\n\tURLParams: false,\n};\n\nconst mapStateToProps = (state, props) => ({\n\toptions: state.aggregations[props.componentId],\n\tselectedValue: (state.selectedValues[props.componentId]\n\t\t&& state.selectedValues[props.componentId].value) || null,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n\taddComponent: component => dispatch(addComponent(component)),\n\tremoveComponent: component => dispatch(removeComponent(component)),\n\tsetQueryOptions: (component, props) => dispatch(setQueryOptions(component, props)),\n\tsetQueryListener: (component, onQueryChange, beforeQueryChange) =>\n\t\tdispatch(setQueryListener(component, onQueryChange, beforeQueryChange)),\n\tupdateQuery: updateQueryObject => dispatch(updateQuery(updateQueryObject)),\n\twatchComponent: (component, react) => dispatch(watchComponent(component, react)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(TagCloud);\n"]}