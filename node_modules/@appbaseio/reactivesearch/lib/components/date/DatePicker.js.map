{"version":3,"sources":["../../../src/components/date/DatePicker.js"],"names":["DatePicker","props","state","currentDate","locked","setQueryListener","componentId","onQueryChange","componentWillMount","addComponent","setReact","selectedValue","handleDateChange","defaultSelected","componentWillReceiveProps","nextProps","react","dataField","updateQuery","formatInputDate","componentWillUnmount","removeComponent","watchComponent","render","showClear","style","className","title","innerClass","background","theme","colors","backgroundColor","focused","placeholder","numberOfMonths","initialMonth","clickUnselectsDay","handleDayPicker","readOnly","container","overlayWrapper","overlay","dayPickerInputProps","clearDayPicker","defaultQuery","value","query","queryFormat","range","gte","formatDate","addHours","lte","date","getTime","Math","floor","toString","isDefaultValue","valid","length","console","error","beforeValueChange","performUpdate","setState","onValueChange","customQuery","showFilter","label","filterLabel","URLParams","propTypes","funcRequired","string","bool","stringRequired","dateObject","number","func","queryFormatDate","defaultProps","mapStateToProps","selectedValues","mapDispatchtoProps","dispatch","component","updateQueryObject","beforeQueryChange"],"mappings":"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","file":"DatePicker.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n\taddComponent,\n\tremoveComponent,\n\twatchComponent,\n\tupdateQuery,\n\tsetQueryListener,\n} from '@appbaseio/reactivecore/lib/actions';\nimport {\n\tisEqual,\n\tcheckValueChange,\n\tcheckPropChange,\n\tgetClassName,\n} from '@appbaseio/reactivecore/lib/utils/helper';\nimport dateFormats from '@appbaseio/reactivecore/lib/utils/dateFormats';\nimport types from '@appbaseio/reactivecore/lib/utils/types';\nimport XDate from 'xdate';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport { withTheme } from 'emotion-theming';\n\nimport DateContainer from '../../styles/DateContainer';\nimport Title from '../../styles/Title';\nimport Flex from '../../styles/Flex';\nimport CancelSvg from '../shared/CancelSvg';\nimport { connect } from '../../utils';\n\nclass DatePicker extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcurrentDate: '',\n\t\t};\n\t\tthis.locked = false;\n\t\tprops.setQueryListener(props.componentId, props.onQueryChange, null);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.props.addComponent(this.props.componentId);\n\t\tthis.setReact(this.props);\n\n\t\tif (this.props.selectedValue) {\n\t\t\tthis.handleDateChange(this.props.selectedValue, true);\n\t\t} else if (this.props.defaultSelected) {\n\t\t\tthis.handleDateChange(this.props.defaultSelected, true);\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tcheckPropChange(\n\t\t\tthis.props.react,\n\t\t\tnextProps.react,\n\t\t\t() => this.setReact(nextProps),\n\t\t);\n\t\tcheckPropChange(\n\t\t\tthis.props.dataField,\n\t\t\tnextProps.dataField,\n\t\t\t() => this.updateQuery(\n\t\t\t\tthis.state.currentDate ? this.formatInputDate(this.state.currentDate) : null,\n\t\t\t\tnextProps,\n\t\t\t),\n\t\t);\n\t\tif (!isEqual(this.props.defaultSelected, nextProps.defaultSelected)) {\n\t\t\tthis.handleDateChange(nextProps.defaultSelected, true, nextProps);\n\t\t} else if (\n\t\t\t!isEqual(this.formatInputDate(this.state.currentDate), nextProps.selectedValue)\n\t\t\t&& !isEqual(this.props.selectedValue, nextProps.selectedValue)\n\t\t) {\n\t\t\tthis.handleDateChange(nextProps.selectedValue || '', true, nextProps);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.removeComponent(this.props.componentId);\n\t}\n\n\tsetReact(props) {\n\t\tif (props.react) {\n\t\t\tprops.watchComponent(props.componentId, props.react);\n\t\t}\n\t}\n\n\tformatDate = (date, props = this.props) => {\n\t\tswitch (props.queryFormat) {\n\t\t\tcase 'epoch_millis':\n\t\t\t\treturn date.getTime();\n\t\t\tcase 'epoch_seconds':\n\t\t\t\treturn Math.floor(date.getTime() / 1000);\n\t\t\tdefault: {\n\t\t\t\tif (dateFormats[props.queryFormat]) {\n\t\t\t\t\treturn date.toString(dateFormats[props.queryFormat]);\n\t\t\t\t}\n\t\t\t\treturn date;\n\t\t\t}\n\t\t}\n\t};\n\n\tformatInputDate = date => new XDate(date).toString('yyyy-MM-dd');\n\n\tstatic defaultQuery = (value, props) => {\n\t\tlet query = null;\n\t\tif (value && props.queryFormat) {\n\t\t\tquery = {\n\t\t\t\trange: {\n\t\t\t\t\t[props.dataField]: {\n\t\t\t\t\t\tgte: this.formatDate(new XDate(value).addHours(-24), props),\n\t\t\t\t\t\tlte: this.formatDate(new XDate(value), props),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\treturn query;\n\t};\n\n\tclearDayPicker = () => {\n\t\tif (this.state.currentDate !== '') {\n\t\t\tthis.handleDateChange('');\t// resets the day picker component\n\t\t}\n\t}\n\n\thandleDayPicker = (date) => {\n\t\tthis.handleDateChange(date || '');\n\t}\n\n\thandleDateChange = (\n\t\tcurrentDate,\n\t\tisDefaultValue = false,\n\t\tprops = this.props,\n\t) => {\n\t\t// currentDate should be valid or empty string for resetting the query\n\t\tif (isDefaultValue && !new XDate(currentDate).valid() && currentDate.length) {\n\t\t\tconsole.error(`DatePicker: ${props.componentId} invalid value passed for date`);\n\t\t} else {\n\t\t\t// ignore state updates when component is locked\n\t\t\tif (props.beforeValueChange && this.locked) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.locked = true;\n\t\t\tlet value = null;\n\t\t\tif (currentDate) {\n\t\t\t\tvalue = isDefaultValue ? currentDate : this.formatInputDate(currentDate);\n\t\t\t}\n\n\t\t\tconst performUpdate = () => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentDate,\n\t\t\t\t}, () => {\n\t\t\t\t\tthis.updateQuery(value, props);\n\t\t\t\t\tthis.locked = false;\n\t\t\t\t\tif (props.onValueChange) props.onValueChange(value);\n\t\t\t\t});\n\t\t\t};\n\t\t\tcheckValueChange(\n\t\t\t\tprops.componentId,\n\t\t\t\tvalue,\n\t\t\t\tprops.beforeValueChange,\n\t\t\t\tperformUpdate,\n\t\t\t);\n\t\t}\n\t};\n\n\tupdateQuery = (value, props) => {\n\t\tconst query = props.customQuery || DatePicker.defaultQuery;\n\n\t\tprops.updateQuery({\n\t\t\tcomponentId: props.componentId,\n\t\t\tquery: query(value, props),\n\t\t\tvalue,\n\t\t\tshowFilter: props.showFilter,\n\t\t\tlabel: props.filterLabel,\n\t\t\tURLParams: props.URLParams,\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<DateContainer\n\t\t\t\tshowBorder={!this.props.showClear}\n\t\t\t\tstyle={this.props.style}\n\t\t\t\tclassName={this.props.className}\n\t\t\t>\n\t\t\t\t{this.props.title && (\n\t\t\t\t\t<Title\n\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'title') || null}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.title}\n\t\t\t\t\t</Title>\n\t\t\t\t)}\n\t\t\t\t<Flex\n\t\t\t\t\tshowBorder={this.props.showClear}\n\t\t\t\t\ticonPosition=\"right\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackground: this.props.theme.colors.backgroundColor || 'transparent',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DayPickerInput\n\t\t\t\t\t\tshowOverlay={this.props.focused}\n\t\t\t\t\t\tformatDate={this.formatInputDate}\n\t\t\t\t\t\tvalue={this.state.currentDate}\n\t\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\t\tdayPickerProps={{\n\t\t\t\t\t\t\tnumberOfMonths: this.props.numberOfMonths,\n\t\t\t\t\t\t\tinitialMonth: this.props.initialMonth,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclickUnselectsDay={this.props.clickUnselectsDay}\n\t\t\t\t\t\tonDayChange={this.handleDayPicker}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\treadOnly: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassNames={{\n\t\t\t\t\t\t\tcontainer:\n\t\t\t\t\t\t\t\tgetClassName(this.props.innerClass, 'daypicker-container')\n\t\t\t\t\t\t\t\t|| 'DayPickerInput',\n\t\t\t\t\t\t\toverlayWrapper:\n\t\t\t\t\t\t\t\tgetClassName(\n\t\t\t\t\t\t\t\t\tthis.props.innerClass,\n\t\t\t\t\t\t\t\t\t'daypicker-overlay-wrapper',\n\t\t\t\t\t\t\t\t) || 'DayPickerInput-OverlayWrapper',\n\t\t\t\t\t\t\toverlay:\n\t\t\t\t\t\t\t\tgetClassName(this.props.innerClass, 'daypicker-overlay')\n\t\t\t\t\t\t\t\t|| 'DayPickerInput-Overlay',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\t{...this.props.dayPickerInputProps}\n\t\t\t\t\t/>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.showClear && this.state.currentDate\n\t\t\t\t\t\t&& <CancelSvg onClick={this.clearDayPicker} />\n\t\t\t\t\t}\n\t\t\t\t</Flex>\n\t\t\t</DateContainer>\n\t\t);\n\t}\n}\n\nDatePicker.propTypes = {\n\taddComponent: types.funcRequired,\n\tremoveComponent: types.funcRequired,\n\tsetQueryListener: types.funcRequired,\n\tupdateQuery: types.funcRequired,\n\twatchComponent: types.funcRequired,\n\tselectedValue: types.selectedValue,\n\t// component props\n\tclassName: types.string,\n\tclickUnselectsDay: types.bool,\n\tcomponentId: types.stringRequired,\n\tdataField: types.stringRequired,\n\tdayPickerInputProps: types.props,\n\tdefaultSelected: types.date,\n\tfilterLabel: types.string,\n\tfocused: types.bool,\n\tinitialMonth: types.dateObject,\n\tinnerClass: types.style,\n\tnumberOfMonths: types.number,\n\tonQueryChange: types.func,\n\tplaceholder: types.string,\n\tqueryFormat: types.queryFormatDate,\n\treact: types.react,\n\tshowClear: types.bool,\n\tshowFilter: types.bool,\n\tstyle: types.style,\n\ttheme: types.style,\n\ttitle: types.string,\n};\n\nDatePicker.defaultProps = {\n\tclickUnselectsDay: true,\n\tnumberOfMonths: 1,\n\tplaceholder: 'Select Date',\n\tshowClear: true,\n\tshowFilter: true,\n};\n\nconst mapStateToProps = (state, props) => ({\n\tselectedValue: state.selectedValues[props.componentId]\n\t\t? state.selectedValues[props.componentId].value\n\t\t: null,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n\taddComponent: component => dispatch(addComponent(component)),\n\tremoveComponent: component => dispatch(removeComponent(component)),\n\tupdateQuery: updateQueryObject => dispatch(updateQuery(updateQueryObject)),\n\twatchComponent: (component, react) => dispatch(watchComponent(component, react)),\n\tsetQueryListener: (component, onQueryChange, beforeQueryChange) =>\n\t\tdispatch(setQueryListener(component, onQueryChange, beforeQueryChange)),\n});\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchtoProps,\n)(withTheme(DatePicker));\n"]}