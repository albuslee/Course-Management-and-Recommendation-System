{"version":3,"sources":["../../../src/components/range/DynamicRangeSlider.js"],"names":["DynamicRangeSlider","props","state","currentValue","range","stats","internalHistogramComponent","componentId","internalRangeComponent","internalMatchAllComponent","locked","setQueryListener","onQueryChange","componentWillMount","addComponent","updateRangeQueryOptions","setReact","componentWillReceiveProps","nextProps","updateQueryOptions","updateRange","start","Math","floor","end","ceil","selectedValue","handleChange","defaultSelected","react","dataField","options","sort","a","b","key","setState","shouldComponentUpdate","nextState","upperLimit","stepValue","console","warn","componentWillUnmount","removeComponent","render","getRangeLabels","startLabel","endLabel","style","className","title","innerClass","length","showHistogram","getValidInterval","handleSlider","handleDrag","snap","getSnapPoints","parseValue","value","defaultQuery","Array","isArray","gte","lte","boost","watchComponent","newReact","setQueryOptions","aggs","match_all","and","snapPoints","i","concat","min","interval","error","histogramQuery","histogram","field","offset","rangeQuery","max","beforeValueChange","normalizedValue","performUpdate","normalizedValues","updateQuery","onValueChange","values","onDrag","query","customQuery","label","filterLabel","showFilter","URLParams","queryOptions","rangeLabels","propTypes","funcRequired","func","string","stringRequired","number","bool","defaultProps","mapStateToProps","aggregations","buckets","selectedValues","mapDispatchtoProps","dispatch","component","execute","beforeQueryChange","updateQueryObject"],"mappings":"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","file":"DynamicRangeSlider.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n\taddComponent,\n\tremoveComponent,\n\twatchComponent,\n\tupdateQuery,\n\tsetQueryOptions,\n\tsetQueryListener,\n} from '@appbaseio/reactivecore/lib/actions';\nimport {\n\tisEqual,\n\tcheckValueChange,\n\tcheckPropChange,\n\tcheckSomePropChange,\n\tgetClassName,\n\tpushToAndClause,\n} from '@appbaseio/reactivecore/lib/utils/helper';\nimport types from '@appbaseio/reactivecore/lib/utils/types';\nimport Rheostat from 'rheostat/lib/Slider';\n\nimport HistogramContainer from './addons/HistogramContainer';\nimport RangeLabel from './addons/RangeLabel';\nimport Slider from '../../styles/Slider';\nimport Title from '../../styles/Title';\nimport { rangeLabelsContainer } from '../../styles/Label';\nimport { connect } from '../../utils';\n\nclass DynamicRangeSlider extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrentValue: null,\n\t\t\trange: null,\n\t\t\tstats: [],\n\t\t};\n\t\tthis.internalHistogramComponent = `${this.props.componentId}__histogram__internal`;\n\t\tthis.internalRangeComponent = `${this.props.componentId}__range__internal`;\n\t\tthis.internalMatchAllComponent = `${this.props.componentId}__match_all__internal`;\n\t\tthis.locked = false;\n\t\tprops.setQueryListener(props.componentId, props.onQueryChange, null);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.props.addComponent(this.props.componentId);\n\t\tthis.props.addComponent(this.internalHistogramComponent);\n\t\tthis.props.addComponent(this.internalRangeComponent);\n\n\t\t// get range before executing other queries\n\t\tthis.updateRangeQueryOptions(this.props);\n\t\tthis.setReact(this.props);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (!isEqual(this.props.range, nextProps.range) && nextProps.range) {\n\t\t\tthis.updateQueryOptions(nextProps, nextProps.range);\n\t\t\t// floor and ceil to take edge cases into account\n\t\t\tthis.updateRange({\n\t\t\t\tstart: Math.floor(nextProps.range.start),\n\t\t\t\tend: Math.ceil(nextProps.range.end),\n\t\t\t});\n\n\t\t\t// only listen to selectedValue initially, after the\n\t\t\t// component has mounted and range is received\n\t\t\tif (nextProps.selectedValue && !this.state.currentValue) {\n\t\t\t\tthis.handleChange(nextProps.selectedValue, nextProps);\n\t\t\t} else if (nextProps.defaultSelected) {\n\t\t\t\tconst { start, end }\n\t\t\t\t\t= nextProps.defaultSelected(nextProps.range.start, nextProps.range.end);\n\t\t\t\tthis.handleChange([\n\t\t\t\t\tstart,\n\t\t\t\t\tend,\n\t\t\t\t], nextProps);\n\t\t\t} else {\n\t\t\t\tthis.handleChange([\n\t\t\t\t\tMath.floor(nextProps.range.start),\n\t\t\t\t\tMath.ceil(nextProps.range.end),\n\t\t\t\t], nextProps);\n\t\t\t}\n\t\t} else if (!isEqual(this.props.defaultSelected, nextProps.defaultSelected) && nextProps.range) {\n\t\t\tconst { start, end } = nextProps.defaultSelected(nextProps.range.start, nextProps.range.end);\n\t\t\tthis.handleChange(\n\t\t\t\t[start, end],\n\t\t\t\tnextProps,\n\t\t\t);\n\t\t}\n\n\t\tcheckPropChange(this.props.react, nextProps.react, () => {\n\t\t\tthis.updateRangeQueryOptions(nextProps);\n\t\t\tthis.setReact(nextProps);\n\t\t});\n\t\tcheckPropChange(this.props.dataField, nextProps.dataField, () => {\n\t\t\tthis.updateRangeQueryOptions(nextProps);\n\t\t});\n\t\tcheckSomePropChange(\n\t\t\tthis.props,\n\t\t\tnextProps,\n\t\t\t['showHistogram', 'interval'],\n\t\t\t() => this.updateQueryOptions(nextProps, nextProps.range || this.state.range),\n\t\t);\n\t\tcheckPropChange(this.props.options, nextProps.options, () => {\n\t\t\tconst { options } = nextProps;\n\t\t\toptions.sort((a, b) => {\n\t\t\t\tif (a.key < b.key) return -1;\n\t\t\t\tif (a.key > b.key) return 1;\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\tstats: options,\n\t\t\t});\n\t\t});\n\t}\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\tif (nextState.range) {\n\t\t\tconst upperLimit = Math.floor((nextState.range.end - nextState.range.start) / 2);\n\t\t\tif (nextProps.stepValue < 1 || nextProps.stepValue > upperLimit) {\n\t\t\t\tconsole.warn(`stepValue for DynamicRangeSlider ${nextProps.componentId} should be greater than 0 and less than or equal to ${upperLimit}`);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn true;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.removeComponent(this.props.componentId);\n\t\tthis.props.removeComponent(this.internalHistogramComponent);\n\t\tthis.props.removeComponent(this.internalRangeComponent);\n\t\tthis.props.removeComponent(this.internalMatchAllComponent);\n\t}\n\n\tsetReact = (props) => {\n\t\tconst { react } = props;\n\t\tif (react) {\n\t\t\tprops.watchComponent(this.internalRangeComponent, props.react);\n\t\t\tconst newReact = pushToAndClause(\n\t\t\t\treact,\n\t\t\t\tthis.internalHistogramComponent,\n\t\t\t);\n\t\t\tprops.watchComponent(props.componentId, newReact);\n\t\t} else {\n\t\t\t// internalRangeComponent watches internalMatchAll component allowing execution of query\n\t\t\t// in case of no react prop\n\t\t\tthis.props.addComponent(this.internalMatchAllComponent);\n\t\t\tprops.setQueryOptions(this.internalMatchAllComponent, { aggs: { match_all: {} } }, false);\n\t\t\tprops.watchComponent(this.internalRangeComponent, { and: this.internalMatchAllComponent });\n\t\t\tprops.watchComponent(props.componentId, { and: this.internalHistogramComponent });\n\t\t}\n\t};\n\n\t// value parser for SSR\n\tstatic parseValue = value => (value\n\t\t? [value().start, value().end]\n\t\t: null\n\t)\n\n\tstatic defaultQuery = (value, props) => {\n\t\tif (Array.isArray(value) && value.length) {\n\t\t\treturn {\n\t\t\t\trange: {\n\t\t\t\t\t[props.dataField]: {\n\t\t\t\t\t\tgte: value[0],\n\t\t\t\t\t\tlte: value[1],\n\t\t\t\t\t\tboost: 2.0,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t};\n\n\tgetSnapPoints = () => {\n\t\tlet snapPoints = [];\n\t\tlet { stepValue } = this.props;\n\t\tconst { range } = this.state;\n\n\t\t// limit the number of steps to prevent generating a large number of snapPoints\n\t\tif ((range.end - range.start) / stepValue > 100) {\n\t\t\tstepValue = (range.end - range.start) / 100;\n\t\t}\n\n\t\tfor (let i = range.start; i <= range.end; i += stepValue) {\n\t\t\tsnapPoints = snapPoints.concat(i);\n\t\t}\n\t\tif (snapPoints[snapPoints.length - 1] !== range.end) {\n\t\t\tsnapPoints = snapPoints.concat(range.end);\n\t\t}\n\t\treturn snapPoints;\n\t};\n\n\tgetValidInterval = (props, range) => {\n\t\tconst min = Math.ceil((range.end - range.start) / 100) || 1;\n\t\tif (!props.interval) {\n\t\t\treturn min;\n\t\t} else if (props.interval < min) {\n\t\t\tconsole.error(`${props.componentId}: interval prop's value should be greater than or equal to ${min}`);\n\t\t\treturn min;\n\t\t}\n\t\treturn props.interval;\n\t};\n\n\thistogramQuery = (props, range) => ({\n\t\t[props.dataField]: {\n\t\t\thistogram: {\n\t\t\t\tfield: props.dataField,\n\t\t\t\tinterval: this.getValidInterval(props, range),\n\t\t\t\toffset: range.start,\n\t\t\t},\n\t\t},\n\t});\n\n\trangeQuery = props => ({\n\t\tmin: { min: { field: props.dataField } },\n\t\tmax: { max: { field: props.dataField } },\n\t});\n\n\thandleChange = (currentValue, props = this.props) => {\n\t\t// ignore state updates when component is locked\n\t\tif (props.beforeValueChange && this.locked) {\n\t\t\treturn;\n\t\t}\n\t\t// always keep the values within range\n\t\tconst normalizedValue = [\n\t\t\tcurrentValue[0] < props.range.start ? props.range.start : currentValue[0],\n\t\t\tcurrentValue[1] > props.range.end ? props.range.end : currentValue[1],\n\t\t];\n\t\tthis.locked = true;\n\t\tconst performUpdate = () => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentValue: normalizedValue,\n\t\t\t}, () => {\n\t\t\t\tconst normalizedValues = [normalizedValue[0], normalizedValue[1]];\n\t\t\t\tthis.updateQuery(normalizedValues, props);\n\t\t\t\tthis.locked = false;\n\t\t\t\tif (props.onValueChange) props.onValueChange(normalizedValues);\n\t\t\t});\n\t\t};\n\t\tcheckValueChange(\n\t\t\tprops.componentId,\n\t\t\t{\n\t\t\t\tstart: normalizedValue[0],\n\t\t\t\tend: normalizedValue[1],\n\t\t\t},\n\t\t\tprops.beforeValueChange,\n\t\t\tperformUpdate,\n\t\t);\n\t};\n\n\thandleSlider = ({ values }) => {\n\t\tthis.handleChange(values);\n\t};\n\n\thandleDrag = (values) => {\n\t\tif (this.props.onDrag) {\n\t\t\tconst { min, max, values: currentValue } = values;\n\t\t\tthis.props.onDrag(currentValue, [min, max]);\n\t\t}\n\t};\n\n\tupdateQuery = (value, props) => {\n\t\tconst query = props.customQuery || DynamicRangeSlider.defaultQuery;\n\n\t\tprops.updateQuery({\n\t\t\tcomponentId: props.componentId,\n\t\t\tquery: query(value, props),\n\t\t\tvalue,\n\t\t\tlabel: props.filterLabel,\n\t\t\tshowFilter: false, // disable filters for DynamicRangeSlider\n\t\t\tURLParams: props.URLParams,\n\t\t});\n\t};\n\n\tupdateQueryOptions = (props, range) => {\n\t\tif (props.showHistogram) {\n\t\t\tconst queryOptions = {\n\t\t\t\taggs: this.histogramQuery(props, range),\n\t\t\t};\n\n\t\t\tprops.setQueryOptions(this.internalHistogramComponent, queryOptions, false);\n\n\t\t\tconst query = props.customQuery || DynamicRangeSlider.defaultQuery;\n\n\t\t\tprops.updateQuery({\n\t\t\t\tcomponentId: this.internalHistogramComponent,\n\t\t\t\tquery: query([range.start, range.end], props),\n\t\t\t});\n\t\t}\n\t};\n\n\tupdateRange = (range) => {\n\t\tthis.setState({\n\t\t\trange,\n\t\t});\n\t}\n\n\tupdateRangeQueryOptions = (props) => {\n\t\tconst queryOptions = {\n\t\t\taggs: this.rangeQuery(props),\n\t\t};\n\n\t\tprops.setQueryOptions(this.internalRangeComponent, queryOptions);\n\t};\n\n\tgetRangeLabels = () => {\n\t\tlet { start: startLabel, end: endLabel } = this.state.range;\n\n\t\tif (this.props.rangeLabels) {\n\t\t\tconst rangeLabels = this.props.rangeLabels(this.props.range.start, this.props.range.end);\n\t\t\tstartLabel = rangeLabels.start;\n\t\t\tendLabel = rangeLabels.end;\n\t\t}\n\n\t\treturn {\n\t\t\tstartLabel,\n\t\t\tendLabel,\n\t\t};\n\t}\n\n\trender() {\n\t\tif (!this.state.currentValue || !this.state.range) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { startLabel, endLabel } = this.getRangeLabels();\n\n\t\treturn (\n\t\t\t<Slider primary style={this.props.style} className={this.props.className}>\n\t\t\t\t{this.props.title && (\n\t\t\t\t\t<Title\n\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'title') || null}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.title}\n\t\t\t\t\t</Title>\n\t\t\t\t)}\n\t\t\t\t{this.state.stats.length && this.props.showHistogram ? (\n\t\t\t\t\t<HistogramContainer\n\t\t\t\t\t\tstats={this.state.stats}\n\t\t\t\t\t\trange={this.state.range}\n\t\t\t\t\t\tinterval={this.getValidInterval(this.props, this.state.range)}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t<Rheostat\n\t\t\t\t\tmin={this.state.range.start}\n\t\t\t\t\tmax={this.state.range.end}\n\t\t\t\t\tvalues={this.state.currentValue}\n\t\t\t\t\tonChange={this.handleSlider}\n\t\t\t\t\tonValuesUpdated={this.handleDrag}\n\t\t\t\t\tsnap={this.props.snap}\n\t\t\t\t\tsnapPoints={this.props.snap ? this.getSnapPoints() : null}\n\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'slider')}\n\t\t\t\t/>\n\t\t\t\t<div className={rangeLabelsContainer}>\n\t\t\t\t\t<RangeLabel\n\t\t\t\t\t\talign=\"left\"\n\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'label') || null}\n\t\t\t\t\t>\n\t\t\t\t\t\t{startLabel}\n\t\t\t\t\t</RangeLabel>\n\t\t\t\t\t<RangeLabel\n\t\t\t\t\t\talign=\"right\"\n\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'label') || null}\n\t\t\t\t\t>\n\t\t\t\t\t\t{endLabel}\n\t\t\t\t\t</RangeLabel>\n\t\t\t\t</div>\n\t\t\t</Slider>\n\t\t);\n\t}\n}\n\nDynamicRangeSlider.propTypes = {\n\taddComponent: types.funcRequired,\n\tremoveComponent: types.funcRequired,\n\tsetQueryListener: types.funcRequired,\n\tsetQueryOptions: types.funcRequired,\n\tupdateQuery: types.funcRequired,\n\twatchComponent: types.funcRequired,\n\toptions: types.options,\n\trange: types.range,\n\tselectedValue: types.selectedValue,\n\t// component props\n\tbeforeValueChange: types.func,\n\tclassName: types.string,\n\tcomponentId: types.stringRequired,\n\tcustomQuery: types.func,\n\tdataField: types.stringRequired,\n\tdefaultSelected: types.func,\n\tfilterLabel: types.string,\n\tinnerClass: types.style,\n\tinterval: types.number,\n\tonDrag: types.func,\n\tonQueryChange: types.func,\n\tonValueChange: types.func,\n\trangeLabels: types.func,\n\treact: types.react,\n\tshowHistogram: types.bool,\n\tsnap: types.bool,\n\tstepValue: types.number,\n\tstyle: types.style,\n\ttitle: types.title,\n\tURLParams: types.bool,\n};\n\nDynamicRangeSlider.defaultProps = {\n\tclassName: null,\n\tshowHistogram: true,\n\tsnap: true,\n\tstepValue: 1,\n\tstyle: {},\n\tURLParams: false,\n};\n\nconst mapStateToProps = (state, props) => ({\n\toptions:\n\t\t(state.aggregations[props.componentId]\n\t\t&& state.aggregations[props.componentId][props.dataField]\n\t\t&& state.aggregations[props.componentId][props.dataField].buckets)\n\t\t\t? state.aggregations[props.componentId][props.dataField].buckets\n\t\t\t: [],\n\trange: state.aggregations[`${props.componentId}__range__internal`]\n\t\t&& state.aggregations[`${props.componentId}__range__internal`].min\n\t\t? {\n\t\t\tstart: state.aggregations[`${props.componentId}__range__internal`].min.value,\n\t\t\tend: state.aggregations[`${props.componentId}__range__internal`].max.value,\n\t\t}\n\t\t: null,\n\tselectedValue: state.selectedValues[props.componentId]\n\t\t? state.selectedValues[props.componentId].value\n\t\t: null,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n\taddComponent: component => dispatch(addComponent(component)),\n\tremoveComponent: component => dispatch(removeComponent(component)),\n\tsetQueryOptions: (component, props, execute) =>\n\t\tdispatch(setQueryOptions(component, props, execute)),\n\tsetQueryListener: (component, onQueryChange, beforeQueryChange) =>\n\t\tdispatch(setQueryListener(component, onQueryChange, beforeQueryChange)),\n\tupdateQuery: updateQueryObject => dispatch(updateQuery(updateQueryObject)),\n\twatchComponent: (component, react) => dispatch(watchComponent(component, react)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(DynamicRangeSlider);\n"]}