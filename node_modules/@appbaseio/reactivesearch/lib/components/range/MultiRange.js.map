{"version":3,"sources":["../../../src/components/range/MultiRange.js"],"names":["MultiRange","props","state","currentValue","showModal","selectedValues","type","locked","setQueryListener","componentId","onQueryChange","componentWillMount","addComponent","setReact","selectedValue","selectItem","defaultSelected","componentWillReceiveProps","nextProps","react","dataField","updateQuery","componentWillUnmount","removeComponent","watchComponent","render","style","className","title","innerClass","data","map","item","label","handleClick","showCheckbox","parseValue","value","filter","includes","defaultQuery","values","generateRangeQuery","items","length","range","gte","start","lte","end","boost","query","bool","should","minimum_should_match","isDefaultValue","beforeValueChange","forEach","del","selected","currentItem","find","performUpdate","setState","onValueChange","toggleModal","customQuery","filterLabel","showFilter","URLParams","e","target","propTypes","funcRequired","func","string","stringRequired","stringArray","placeholder","boolRequired","supportedOrientations","defaultProps","mapStateToProps","mapDispatchtoProps","dispatch","component","updateQueryObject","beforeQueryChange"],"mappings":"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","file":"MultiRange.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n\taddComponent,\n\tremoveComponent,\n\twatchComponent,\n\tupdateQuery,\n\tsetQueryListener,\n} from '@appbaseio/reactivecore/lib/actions';\nimport {\n\tisEqual,\n\tcheckValueChange,\n\tcheckPropChange,\n\tgetClassName,\n} from '@appbaseio/reactivecore/lib/utils/helper';\n\nimport types from '@appbaseio/reactivecore/lib/utils/types';\n\nimport Title from '../../styles/Title';\nimport Container from '../../styles/Container';\nimport { UL, Checkbox } from '../../styles/FormControlList';\nimport { connect } from '../../utils';\n\nclass MultiRange extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrentValue: [],\n\t\t\tshowModal: false,\n\t\t\t// selectedValues hold the selected items as keys for O(1) complexity\n\t\t\tselectedValues: {},\n\t\t};\n\n\t\tthis.type = 'range';\n\t\tthis.locked = false;\n\t\tprops.setQueryListener(props.componentId, props.onQueryChange, null);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.props.addComponent(this.props.componentId);\n\t\tthis.setReact(this.props);\n\n\t\tif (this.props.selectedValue) {\n\t\t\tthis.selectItem(this.props.selectedValue, true);\n\t\t} else if (this.props.defaultSelected) {\n\t\t\tthis.selectItem(this.props.defaultSelected, true);\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tcheckPropChange(\n\t\t\tthis.props.react,\n\t\t\tnextProps.react,\n\t\t\t() => this.setReact(nextProps),\n\t\t);\n\n\t\tcheckPropChange(this.props.dataField, nextProps.dataField, () => {\n\t\t\tthis.updateQuery(this.state.currentValue, nextProps);\n\t\t});\n\n\t\tif (!isEqual(this.props.defaultSelected, nextProps.defaultSelected)) {\n\t\t\tthis.selectItem(nextProps.defaultSelected, true);\n\t\t} else if (!isEqual(this.state.currentValue, nextProps.selectedValue)\n\t\t\t&& (nextProps.selectedValue || nextProps.selectedValue === null)) {\n\t\t\tthis.selectItem(nextProps.selectedValue, true);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.removeComponent(this.props.componentId);\n\t}\n\n\tsetReact(props) {\n\t\tif (props.react) {\n\t\t\tprops.watchComponent(props.componentId, props.react);\n\t\t}\n\t}\n\n\t// parses range label to get start and end\n\tstatic parseValue = (value, props) => (value\n\t\t? props.data.filter(item => value.includes(item.label))\n\t\t: null)\n\n\tstatic defaultQuery = (values, props) => {\n\t\tconst generateRangeQuery = (dataField, items) => {\n\t\t\tif (items.length > 0) {\n\t\t\t\treturn items.map(value => ({\n\t\t\t\t\trange: {\n\t\t\t\t\t\t[dataField]: {\n\t\t\t\t\t\t\tgte: value.start,\n\t\t\t\t\t\t\tlte: value.end,\n\t\t\t\t\t\t\tboost: 2.0,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t}));\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tif (values && values.length) {\n\t\t\tconst query = {\n\t\t\t\tbool: {\n\t\t\t\t\tshould: generateRangeQuery(props.dataField, values),\n\t\t\t\t\tminimum_should_match: 1,\n\t\t\t\t\tboost: 1.0,\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn query;\n\t\t}\n\t\treturn null;\n\t}\n\n\tselectItem = (item, isDefaultValue = false, props = this.props) => {\n\t\t// ignore state updates when component is locked\n\t\tif (props.beforeValueChange && this.locked) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.locked = true;\n\t\tlet { currentValue, selectedValues } = this.state;\n\n\t\tif (!item) {\n\t\t\tcurrentValue = [];\n\t\t\tselectedValues = {};\n\t\t} else if (isDefaultValue) {\n\t\t\t// checking if the items in defaultSeleted exist in the data prop\n\t\t\tcurrentValue = MultiRange.parseValue(item, props);\n\t\t\tcurrentValue.forEach((value) => {\n\t\t\t\tselectedValues = { ...selectedValues, [value.label]: true };\n\t\t\t});\n\t\t} else if (selectedValues[item]) {\n\t\t\tcurrentValue = currentValue.filter(value => value.label !== item);\n\t\t\tconst { [item]: del, ...selected } = selectedValues;\n\t\t\tselectedValues = selected;\n\t\t} else {\n\t\t\tconst currentItem = props.data.find(value => item === value.label);\n\t\t\tcurrentValue = [...currentValue, currentItem];\n\t\t\tselectedValues = { ...selectedValues, [item]: true };\n\t\t}\n\t\tconst performUpdate = () => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentValue,\n\t\t\t\tselectedValues,\n\t\t\t}, () => {\n\t\t\t\tthis.updateQuery(currentValue, props);\n\t\t\t\tthis.locked = false;\n\t\t\t\tif (props.onValueChange) props.onValueChange(currentValue);\n\t\t\t});\n\t\t};\n\n\t\tcheckValueChange(\n\t\t\tprops.componentId,\n\t\t\tcurrentValue,\n\t\t\tprops.beforeValueChange,\n\t\t\tperformUpdate,\n\t\t);\n\t}\n\n\ttoggleModal = () => {\n\t\tthis.setState({\n\t\t\tshowModal: !this.state.showModal,\n\t\t});\n\t};\n\n\tupdateQuery = (value, props) => {\n\t\tconst query = props.customQuery || MultiRange.defaultQuery;\n\n\t\tprops.updateQuery({\n\t\t\tcomponentId: props.componentId,\n\t\t\tquery: query(value, props),\n\t\t\tvalue,\n\t\t\tlabel: props.filterLabel,\n\t\t\tshowFilter: props.showFilter,\n\t\t\tURLParams: props.URLParams,\n\t\t});\n\t};\n\n\thandleClick = (e) => {\n\t\tthis.selectItem(e.target.value);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Container style={this.props.style} className={this.props.className}>\n\t\t\t\t{this.props.title && <Title className={getClassName(this.props.innerClass, 'title') || null}>{this.props.title}</Title>}\n\t\t\t\t<UL className={getClassName(this.props.innerClass, 'list') || null}>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.data.map(item => (\n\t\t\t\t\t\t\t<li key={item.label} className={`${this.state.selectedValues[item.label] ? 'active' : ''}`}>\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'checkbox') || null}\n\t\t\t\t\t\t\t\t\tid={`${this.props.componentId}-${item.label}`}\n\t\t\t\t\t\t\t\t\tname={this.props.componentId}\n\t\t\t\t\t\t\t\t\tvalue={item.label}\n\t\t\t\t\t\t\t\t\tonChange={this.handleClick}\n\t\t\t\t\t\t\t\t\tchecked={!!this.state.selectedValues[item.label]}\n\t\t\t\t\t\t\t\t\tshow={this.props.showCheckbox}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'label') || null}\n\t\t\t\t\t\t\t\t\thtmlFor={`${this.props.componentId}-${item.label}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</UL>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nMultiRange.propTypes = {\n\taddComponent: types.funcRequired,\n\tremoveComponent: types.funcRequired,\n\tsetQueryListener: types.funcRequired,\n\tupdateQuery: types.funcRequired,\n\twatchComponent: types.funcRequired,\n\tselectedValue: types.selectedValue,\n\t// component props\n\tbeforeValueChange: types.func,\n\tclassName: types.string,\n\tcomponentId: types.stringRequired,\n\tcustomQuery: types.func,\n\tdata: types.data,\n\tdataField: types.stringRequired,\n\tdefaultSelected: types.stringArray,\n\tfilterLabel: types.filterLabel,\n\tinnerClass: types.style,\n\tonQueryChange: types.func,\n\tonValueChange: types.func,\n\tplaceholder: types.string,\n\treact: types.react,\n\tshowCheckbox: types.boolRequired,\n\tshowFilter: types.bool,\n\tstyle: types.style,\n\tsupportedOrientations: types.supportedOrientations,\n\ttitle: types.title,\n\tURLParams: types.bool,\n};\n\nMultiRange.defaultProps = {\n\tclassName: null,\n\tshowCheckbox: true,\n\tshowFilter: true,\n\tstyle: {},\n\tURLParams: false,\n};\n\nconst mapStateToProps = (state, props) => ({\n\tselectedValue: state.selectedValues[props.componentId]\n\t\t? state.selectedValues[props.componentId].value\n\t\t: null,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n\taddComponent: component => dispatch(addComponent(component)),\n\tremoveComponent: component => dispatch(removeComponent(component)),\n\tupdateQuery: updateQueryObject => dispatch(updateQuery(updateQueryObject)),\n\twatchComponent: (component, react) => dispatch(watchComponent(component, react)),\n\tsetQueryListener: (component, onQueryChange, beforeQueryChange) =>\n\t\tdispatch(setQueryListener(component, onQueryChange, beforeQueryChange)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(MultiRange);\n"]}