{"version":3,"sources":["../../../src/components/range/RatingsFilter.js"],"names":["RatingsFilter","props","type","state","currentValue","locked","setQueryListener","componentId","onQueryChange","componentWillMount","addComponent","setReact","selectedValue","defaultSelected","Array","isArray","setValue","parseValue","componentWillReceiveProps","nextProps","react","dataField","updateQuery","start","end","componentWillUnmount","removeComponent","watchComponent","render","style","className","title","innerClass","data","map","item","e","label","value","defaultQuery","range","gte","lte","boost","beforeValueChange","performUpdate","setState","onValueChange","query","customQuery","filterLabel","showFilter","URLParams","propTypes","funcRequired","func","string","stringRequired","bool","defaultProps","mapStateToProps","selectedValues","mapDispatchtoProps","dispatch","component","updateQueryObject","beforeQueryChange"],"mappings":";;;;AAAA;;;;AAEA;;AAOA;;AAOA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;IAEMA,a;;;AACL,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,+CAClB,sBAAMA,KAAN,CADkB;;AAAA;;AAGlB,QAAKC,IAAL,GAAY,OAAZ;AACA,QAAKC,KAAL,GAAa;AACZC,iBAAc;AADF,GAAb;AAGA,QAAKC,MAAL,GAAc,KAAd;AACAJ,QAAMK,gBAAN,CAAuBL,MAAMM,WAA7B,EAA0CN,MAAMO,aAAhD,EAA+D,IAA/D;AARkB;AASlB;;yBAEDC,kB,iCAAqB;AACpB,OAAKR,KAAL,CAAWS,YAAX,CAAwB,KAAKT,KAAL,CAAWM,WAAnC;AACA,OAAKI,QAAL,CAAc,KAAKV,KAAnB;;AAFoB,eAIuB,KAAKA,KAJ5B;AAAA,MAIZW,aAJY,UAIZA,aAJY;AAAA,MAIGC,eAJH,UAIGA,eAJH;;AAKpB,MAAID,aAAJ,EAAmB;AAClB,OAAIE,MAAMC,OAAN,CAAcH,aAAd,CAAJ,EAAkC;AACjC,SAAKI,QAAL,CAAcJ,aAAd;AACA,IAFD,MAEO;AACN;AACA,SAAKI,QAAL,CAAchB,cAAciB,UAAd,CAAyBL,aAAzB,CAAd;AACA;AACD,GAPD,MAOO,IAAIC,eAAJ,EAAqB;AAC3B,QAAKG,QAAL,CAAchB,cAAciB,UAAd,CAAyBJ,eAAzB,CAAd;AACA;AACD,E;;yBAEDK,yB,sCAA0BC,S,EAAW;AAAA;;AACpC,+BAAgB,KAAKlB,KAAL,CAAWmB,KAA3B,EAAkCD,UAAUC,KAA5C,EAAmD,YAAM;AACxD,UAAKT,QAAL,CAAcQ,SAAd;AACA,GAFD;;AAIA,+BAAgB,KAAKlB,KAAL,CAAWoB,SAA3B,EAAsCF,UAAUE,SAAhD,EAA2D,YAAM;AAChE,UAAKC,WAAL,CAAiB,OAAKnB,KAAL,CAAWC,YAA5B,EAA0Ce,SAA1C;AACA,GAFD;;AAIA,MAAI,CAAC,qBAAQ,KAAKlB,KAAL,CAAWY,eAAnB,EAAoCM,UAAUN,eAA9C,CAAL,EAAqE;AACpE,QAAKG,QAAL,CACCG,UAAUN,eAAV,GACG,CACDM,UAAUN,eAAV,CAA0BU,KADzB,EAEDJ,UAAUN,eAAV,CAA0BW,GAFzB,CADH,GAKG,IANJ,EAOCL,SAPD;AASA,GAVD,MAUO,IAAI,CAAC,qBAAQ,KAAKhB,KAAL,CAAWC,YAAnB,EAAiCe,UAAUP,aAA3C,CAAL,EAAgE;AACtE,QAAKI,QAAL,CAAcG,UAAUP,aAAV,IAA2B,IAAzC,EAA+CO,SAA/C;AACA;AACD,E;;yBAEDM,oB,mCAAuB;AACtB,OAAKxB,KAAL,CAAWyB,eAAX,CAA2B,KAAKzB,KAAL,CAAWM,WAAtC;AACA,E;;yBAEDI,Q,qBAASV,K,EAAO;AACf,MAAIA,MAAMmB,KAAV,EAAiB;AAChBnB,SAAM0B,cAAN,CAAqB1B,MAAMM,WAA3B,EAAwCN,MAAMmB,KAA9C;AACA;AACD,E;;AAED;;;yBA0DAQ,M,qBAAS;AAAA;;AACR,SACC;AAAA;AAAA,KAAW,OAAO,KAAK3B,KAAL,CAAW4B,KAA7B,EAAoC,WAAW,KAAK5B,KAAL,CAAW6B,SAA1D;AACE,QAAK7B,KAAL,CAAW8B,KAAX,IAAoB;AAAA;AAAA,MAAO,WAAW,0BAAa,KAAK9B,KAAL,CAAW+B,UAAxB,EAAoC,OAApC,KAAgD,IAAlE;AAAyE,SAAK/B,KAAL,CAAW8B;AAApF,IADtB;AAEC;AAAA;AAAA,MAAI,mCAAJ;AAEE,SAAK9B,KAAL,CAAWgC,IAAX,CAAgBC,GAAhB,CAAoB;AAAA,YACnB;AAAA;AAAA;AACC,aAAK,UADN;AAEC,iBAAS,GAFV;AAGC,kBACC,OAAK/B,KAAL,CAAWC,YAAX,IACG,OAAKD,KAAL,CAAWC,YAAX,CAAwB,CAAxB,MAA+B+B,KAAKZ,KADvC,GAEG,QAFH,GAGG,EAPL;AASC,gBAAS;AAAA,eAAM,OAAKP,QAAL,CAAc,CAACmB,KAAKZ,KAAN,EAAaY,KAAKX,GAAlB,CAAd,CAAN;AAAA,QATV;AAUC,mBAAY;AAAA,eAAK,8BAAiBY,CAAjB,EAAoB;AAAA,gBAAM,OAAKpB,QAAL,CAAc,CAACmB,KAAKZ,KAAN,EAAaY,KAAKX,GAAlB,CAAd,CAAN;AAAA,SAApB,CAAL;AAAA,QAVb;AAWC,YAAQ,OAAKvB,KAAL,CAAWM,WAAnB,SAAkC4B,KAAKZ,KAAvC,SAAgDY,KAAKX;AAXtD;AAaC,4DAAY,OAAOW,KAAKZ,KAAxB,GAbD;AAeEY,WAAKE,KAAL,GACI;AAAA;AAAA;AAAOF,YAAKE;AAAZ,OADJ,GAEG;AAjBL,MADmB;AAAA,KAApB;AAFF;AAFD,GADD;AA+BA,E;;;;;AAzJIrC,a,CAgEEiB,U,GAAa;AAAA,QAAUqB,QAC3B,CAACA,MAAMf,KAAP,EAAce,MAAMd,GAApB,CAD2B,GAE3B,IAFiB;AAAA,C;;AAhEfxB,a,CAqEEuC,Y,GAAe,UAACD,KAAD,EAAQrC,KAAR,EAAkB;AACvC,KAAIqC,KAAJ,EAAW;AAAA;;AACV,SAAO;AACNE,+BACEvC,MAAMoB,SADR,IACoB;AAClBoB,SAAKH,MAAM,CAAN,CADa;AAElBI,SAAKJ,MAAM,CAAN,CAFa;AAGlBK,WAAO;AAHW,IADpB;AADM,GAAP;AASA;AACD,QAAO,IAAP;AACA,C;;;;;MAED3B,Q,GAAW,UAACsB,KAAD,EAA+B;AAAA,MAAvBrC,KAAuB,uEAAf,OAAKA,KAAU;;AACzC;AACA,MAAIA,MAAM2C,iBAAN,IAA2B,OAAKvC,MAApC,EAA4C;AAC3C;AACA;;AAED,SAAKA,MAAL,GAAc,IAAd;AACA,MAAMwC,gBAAgB,SAAhBA,aAAgB,GAAM;AAC3B,UAAKC,QAAL,CAAc;AACb1C,kBAAckC;AADD,IAAd,EAEG,YAAM;AACR,WAAKhB,WAAL,CAAiBgB,KAAjB,EAAwBrC,KAAxB;AACA,WAAKI,MAAL,GAAc,KAAd;AACA,QAAIJ,MAAM8C,aAAV,EAAyB9C,MAAM8C,aAAN,CAAoBT,KAApB;AACzB,IAND;AAOA,GARD;AASA,gCACCrC,MAAMM,WADP,EAEC+B,KAFD,EAGCrC,MAAM2C,iBAHP,EAICC,aAJD;AAMA,E;;MAEDvB,W,GAAc,UAACgB,KAAD,EAAQrC,KAAR,EAAkB;AAC/B,MAAM+C,QAAQ/C,MAAMgD,WAAN,IAAqBjD,cAAcuC,YAAjD;;AAEAtC,QAAMqB,WAAN,CAAkB;AACjBf,gBAAaN,MAAMM,WADF;AAEjByC,UAAOA,MAAMV,KAAN,EAAarC,KAAb,CAFU;AAGjBqC,eAHiB;AAIjBD,UAAOpC,MAAMiD,WAJI;AAKjBC,eAAY,KALK;AAMjBC,cAAWnD,MAAMmD;AANA,GAAlB;AAQA,E;;;AAqCFpD,cAAcqD,SAAd,GAA0B;AACzB3C,eAAc,gBAAM4C,YADK;AAEzB5B,kBAAiB,gBAAM4B,YAFE;AAGzBhD,mBAAkB,gBAAMgD,YAHC;AAIzBhC,cAAa,gBAAMgC,YAJM;AAKzB3B,iBAAgB,gBAAM2B,YALG;AAMzB1C,gBAAe,gBAAMA,aANI;AAOzB;AACAgC,oBAAmB,gBAAMW,IARA;AASzBzB,YAAW,gBAAM0B,MATQ;AAUzBjD,cAAa,gBAAMkD,cAVM;AAWzBR,cAAa,gBAAMM,IAXM;AAYzBtB,OAAM,gBAAMA,IAZa;AAazBZ,YAAW,gBAAMoC,cAbQ;AAczB5C,kBAAiB,gBAAM2B,KAdE;AAezBU,cAAa,gBAAMM,MAfM;AAgBzBxB,aAAY,gBAAMH,KAhBO;AAiBzBrB,gBAAe,gBAAM+C,IAjBI;AAkBzBR,gBAAe,gBAAMQ,IAlBI;AAmBzBnC,QAAO,gBAAMA,KAnBY;AAoBzBS,QAAO,gBAAMA,KApBY;AAqBzBE,QAAO,gBAAMA,KArBY;AAsBzBqB,YAAW,gBAAMM;AAtBQ,CAA1B;;AAyBA1D,cAAc2D,YAAd,GAA6B;AAC5B7B,YAAW,IADiB;AAE5BD,QAAO,EAFqB;AAG5BuB,YAAW;AAHiB,CAA7B;;AAMA,IAAMQ,kBAAkB,SAAlBA,eAAkB,CAACzD,KAAD,EAAQF,KAAR;AAAA,QAAmB;AAC1CW,iBAAgBT,MAAM0D,cAAN,CAAqB5D,MAAMM,WAA3B,KACZJ,MAAM0D,cAAN,CAAqB5D,MAAMM,WAA3B,EAAwC+B,KAD7B,IACuC;AAFZ,EAAnB;AAAA,CAAxB;;AAKA,IAAMwB,qBAAqB,SAArBA,kBAAqB;AAAA,QAAa;AACvCpD,gBAAc;AAAA,UAAaqD,SAAS,2BAAaC,SAAb,CAAT,CAAb;AAAA,GADyB;AAEvCtC,mBAAiB;AAAA,UAAaqC,SAAS,8BAAgBC,SAAhB,CAAT,CAAb;AAAA,GAFsB;AAGvC1C,eAAa;AAAA,UAAqByC,SAAS,0BAAYE,iBAAZ,CAAT,CAArB;AAAA,GAH0B;AAIvCtC,kBAAgB,wBAACqC,SAAD,EAAY5C,KAAZ;AAAA,UAAsB2C,SAAS,6BAAeC,SAAf,EAA0B5C,KAA1B,CAAT,CAAtB;AAAA,GAJuB;AAKvCd,oBAAkB,0BAAC0D,SAAD,EAAYxD,aAAZ,EAA2B0D,iBAA3B;AAAA,UACjBH,SAAS,+BAAiBC,SAAjB,EAA4BxD,aAA5B,EAA2C0D,iBAA3C,CAAT,CADiB;AAAA;AALqB,EAAb;AAAA,CAA3B;;kBASe,oBAAQN,eAAR,EAAyBE,kBAAzB,EAA6C9D,aAA7C,C","file":"RatingsFilter.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n\taddComponent,\n\tremoveComponent,\n\twatchComponent,\n\tupdateQuery,\n\tsetQueryListener,\n} from '@appbaseio/reactivecore/lib/actions';\nimport {\n\tcheckValueChange,\n\tcheckPropChange,\n\tgetClassName,\n\thandleA11yAction,\n\tisEqual,\n} from '@appbaseio/reactivecore/lib/utils/helper';\nimport types from '@appbaseio/reactivecore/lib/utils/types';\n\nimport Title from '../../styles/Title';\nimport Container from '../../styles/Container';\nimport StarRating from './addons/StarRating';\nimport { ratingsList } from '../../styles/ratingsList';\nimport { connect } from '../../utils';\n\nclass RatingsFilter extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.type = 'range';\n\t\tthis.state = {\n\t\t\tcurrentValue: null,\n\t\t};\n\t\tthis.locked = false;\n\t\tprops.setQueryListener(props.componentId, props.onQueryChange, null);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.props.addComponent(this.props.componentId);\n\t\tthis.setReact(this.props);\n\n\t\tconst { selectedValue, defaultSelected } = this.props;\n\t\tif (selectedValue) {\n\t\t\tif (Array.isArray(selectedValue)) {\n\t\t\t\tthis.setValue(selectedValue);\n\t\t\t} else {\n\t\t\t\t// for SSR\n\t\t\t\tthis.setValue(RatingsFilter.parseValue(selectedValue));\n\t\t\t}\n\t\t} else if (defaultSelected) {\n\t\t\tthis.setValue(RatingsFilter.parseValue(defaultSelected));\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tcheckPropChange(this.props.react, nextProps.react, () => {\n\t\t\tthis.setReact(nextProps);\n\t\t});\n\n\t\tcheckPropChange(this.props.dataField, nextProps.dataField, () => {\n\t\t\tthis.updateQuery(this.state.currentValue, nextProps);\n\t\t});\n\n\t\tif (!isEqual(this.props.defaultSelected, nextProps.defaultSelected)) {\n\t\t\tthis.setValue(\n\t\t\t\tnextProps.defaultSelected\n\t\t\t\t\t? [\n\t\t\t\t\t\tnextProps.defaultSelected.start,\n\t\t\t\t\t\tnextProps.defaultSelected.end,\n\t\t\t\t\t]\n\t\t\t\t\t: null,\n\t\t\t\tnextProps,\n\t\t\t);\n\t\t} else if (!isEqual(this.state.currentValue, nextProps.selectedValue)) {\n\t\t\tthis.setValue(nextProps.selectedValue || null, nextProps);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.removeComponent(this.props.componentId);\n\t}\n\n\tsetReact(props) {\n\t\tif (props.react) {\n\t\t\tprops.watchComponent(props.componentId, props.react);\n\t\t}\n\t}\n\n\t// parses range label to get start and end\n\tstatic parseValue = value => (value\n\t\t? [value.start, value.end]\n\t\t: null\n\t)\n\n\tstatic defaultQuery = (value, props) => {\n\t\tif (value) {\n\t\t\treturn {\n\t\t\t\trange: {\n\t\t\t\t\t[props.dataField]: {\n\t\t\t\t\t\tgte: value[0],\n\t\t\t\t\t\tlte: value[1],\n\t\t\t\t\t\tboost: 2.0,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetValue = (value, props = this.props) => {\n\t\t// ignore state updates when component is locked\n\t\tif (props.beforeValueChange && this.locked) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.locked = true;\n\t\tconst performUpdate = () => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentValue: value,\n\t\t\t}, () => {\n\t\t\t\tthis.updateQuery(value, props);\n\t\t\t\tthis.locked = false;\n\t\t\t\tif (props.onValueChange) props.onValueChange(value);\n\t\t\t});\n\t\t};\n\t\tcheckValueChange(\n\t\t\tprops.componentId,\n\t\t\tvalue,\n\t\t\tprops.beforeValueChange,\n\t\t\tperformUpdate,\n\t\t);\n\t};\n\n\tupdateQuery = (value, props) => {\n\t\tconst query = props.customQuery || RatingsFilter.defaultQuery;\n\n\t\tprops.updateQuery({\n\t\t\tcomponentId: props.componentId,\n\t\t\tquery: query(value, props),\n\t\t\tvalue,\n\t\t\tlabel: props.filterLabel,\n\t\t\tshowFilter: false,\n\t\t\tURLParams: props.URLParams,\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Container style={this.props.style} className={this.props.className}>\n\t\t\t\t{this.props.title && <Title className={getClassName(this.props.innerClass, 'title') || null}>{this.props.title}</Title>}\n\t\t\t\t<ul className={ratingsList}>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.data.map(item => (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\trole=\"menuitem\"\n\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tthis.state.currentValue\n\t\t\t\t\t\t\t\t\t&& this.state.currentValue[0] === item.start\n\t\t\t\t\t\t\t\t\t\t? 'active'\n\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={() => this.setValue([item.start, item.end])}\n\t\t\t\t\t\t\t\tonKeyPress={e => handleA11yAction(e, () => this.setValue([item.start, item.end]))}\n\t\t\t\t\t\t\t\tkey={`${this.props.componentId}-${item.start}-${item.end}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<StarRating stars={item.start} />\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\titem.label\n\t\t\t\t\t\t\t\t\t\t? (<span>{item.label}</span>)\n\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRatingsFilter.propTypes = {\n\taddComponent: types.funcRequired,\n\tremoveComponent: types.funcRequired,\n\tsetQueryListener: types.funcRequired,\n\tupdateQuery: types.funcRequired,\n\twatchComponent: types.funcRequired,\n\tselectedValue: types.selectedValue,\n\t// component props\n\tbeforeValueChange: types.func,\n\tclassName: types.string,\n\tcomponentId: types.stringRequired,\n\tcustomQuery: types.func,\n\tdata: types.data,\n\tdataField: types.stringRequired,\n\tdefaultSelected: types.range,\n\tfilterLabel: types.string,\n\tinnerClass: types.style,\n\tonQueryChange: types.func,\n\tonValueChange: types.func,\n\treact: types.react,\n\tstyle: types.style,\n\ttitle: types.title,\n\tURLParams: types.bool,\n};\n\nRatingsFilter.defaultProps = {\n\tclassName: null,\n\tstyle: {},\n\tURLParams: false,\n};\n\nconst mapStateToProps = (state, props) => ({\n\tselectedValue: (state.selectedValues[props.componentId]\n\t\t&& state.selectedValues[props.componentId].value) || null,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n\taddComponent: component => dispatch(addComponent(component)),\n\tremoveComponent: component => dispatch(removeComponent(component)),\n\tupdateQuery: updateQueryObject => dispatch(updateQuery(updateQueryObject)),\n\twatchComponent: (component, react) => dispatch(watchComponent(component, react)),\n\tsetQueryListener: (component, onQueryChange, beforeQueryChange) =>\n\t\tdispatch(setQueryListener(component, onQueryChange, beforeQueryChange)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(RatingsFilter);\n"]}