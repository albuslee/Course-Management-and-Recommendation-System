{"version":3,"sources":["../../../src/components/range/RangeInput.js"],"names":["RangeInput","props","handleInputChange","e","target","name","value","Number","isNaN","setState","isStartValid","isEndValid","state","handleSlider","start","end","onValueChange","defaultSelected","range","componentWillReceiveProps","nextProps","render","className","style","themePreset","rest","innerClass","stepValue","defaultQuery","parseValue","propTypes","string","func","number","defaultProps","mapStateToProps","config"],"mappings":"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","file":"RangeInput.js","sourcesContent":["import React, { Component } from 'react';\nimport types from '@appbaseio/reactivecore/lib/utils/types';\nimport {\n\tisEqual,\n\tgetClassName,\n} from '@appbaseio/reactivecore/lib/utils/helper';\n\nimport RangeSlider from './RangeSlider';\nimport Input from '../../styles/Input';\nimport Flex from '../../styles/Flex';\nimport Content from '../../styles/Content';\nimport Container from '../../styles/Container';\n\nimport { connect } from '../../utils';\n\nclass RangeInput extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tstart: this.props.defaultSelected ? this.props.defaultSelected.start : props.range.start,\n\t\t\tend: this.props.defaultSelected ? this.props.defaultSelected.end : props.range.end,\n\t\t\tisStartValid: true,\n\t\t\tisEndValid: true,\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (!isEqual(this.props.defaultSelected, nextProps.defaultSelected)) {\n\t\t\tthis.handleSlider(nextProps.defaultSelected);\n\t\t}\n\t}\n\n\t// for SSR\n\tstatic defaultQuery = RangeSlider.defaultQuery\n\n\tstatic parseValue = RangeSlider.parseValue\n\n\thandleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tif (Number.isNaN(value)) {\n\t\t\t// set errors for invalid inputs\n\t\t\tif (name === 'start') {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisStartValid: false,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisEndValid: false,\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t// reset error states for valid inputs\n\t\t\t// eslint-disable-next-line\n\t\t\tif (name === 'start' && !this.state.isStartValid) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisStartValid: true,\n\t\t\t\t});\n\t\t\t} else if (name === 'end' && !this.state.isEndValid) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisEndValid: true,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\thandleSlider = ({ start, end }) => {\n\t\tthis.setState({\n\t\t\tstart,\n\t\t\tend,\n\t\t});\n\t\tif (this.props.onValueChange) {\n\t\t\tthis.props.onValueChange({\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tclassName, style, themePreset, ...rest\n\t\t} = this.props;\n\t\treturn (\n\t\t\t<Container style={style} className={className}>\n\t\t\t\t<RangeSlider\n\t\t\t\t\t{...rest}\n\t\t\t\t\tdefaultSelected={{\n\t\t\t\t\t\tstart: this.state.isStartValid ? Number(this.state.start) : this.props.range.start,\n\t\t\t\t\t\tend: this.state.isEndValid ? Number(this.state.end) : this.props.range.end,\n\t\t\t\t\t}}\n\t\t\t\t\tonValueChange={this.handleSlider}\n\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'slider-container') || null}\n\t\t\t\t/>\n\t\t\t\t<Flex className={getClassName(this.props.innerClass, 'input-container') || null}>\n\t\t\t\t\t<Flex direction=\"column\" flex={2}>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tname=\"start\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\tvalue={this.state.start}\n\t\t\t\t\t\t\tstep={this.props.stepValue}\n\t\t\t\t\t\t\talert={!this.state.isStartValid}\n\t\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'input') || null}\n\t\t\t\t\t\t\tthemePreset={themePreset}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!this.state.isStartValid\n\t\t\t\t\t\t\t&& <Content alert>Input range is invalid</Content>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Flex>\n\t\t\t\t\t<Flex justifyContent=\"center\" alignItems=\"center\" flex={1}>-</Flex>\n\t\t\t\t\t<Flex direction=\"column\" flex={2}>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tname=\"end\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\tvalue={this.state.end}\n\t\t\t\t\t\t\tstep={this.props.stepValue}\n\t\t\t\t\t\t\talert={!this.state.isEndValid}\n\t\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'input') || null}\n\t\t\t\t\t\t\tthemePreset={themePreset}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!this.state.isEndValid\n\t\t\t\t\t\t\t&& <Content alert>Input range is invalid</Content>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Flex>\n\t\t\t\t</Flex>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRangeInput.propTypes = {\n\tclassName: types.string,\n\tdefaultSelected: types.range,\n\tinnerClass: types.style,\n\tonValueChange: types.func,\n\trange: types.range,\n\tstepValue: types.number,\n\tstyle: types.style,\n\tthemePreset: types.themePreset,\n};\n\nRangeInput.defaultProps = {\n\trange: {\n\t\tstart: 0,\n\t\tend: 10,\n\t},\n\tstepValue: 1,\n};\n\nconst mapStateToProps = state => ({\n\tthemePreset: state.config.themePreset,\n});\n\nexport default connect(mapStateToProps, null)(RangeInput);\n"]}