{"version":3,"sources":["../../../src/components/range/SingleDropdownRange.js"],"names":["SingleDropdownRange","props","state","currentValue","type","locked","setQueryListener","componentId","onQueryChange","componentWillMount","addComponent","setReact","selectedValue","setValue","defaultSelected","componentWillReceiveProps","nextProps","react","dataField","updateQuery","componentWillUnmount","removeComponent","watchComponent","render","style","className","title","innerClass","data","placeholder","themePreset","parseValue","value","find","item","label","defaultQuery","range","gte","start","lte","end","boost","isDefaultValue","beforeValueChange","performUpdate","setState","onValueChange","query","customQuery","filterLabel","showFilter","URLParams","propTypes","funcRequired","func","string","stringRequired","bool","defaultProps","mapStateToProps","selectedValues","config","mapDispatchtoProps","dispatch","component","updateQueryObject","beforeQueryChange"],"mappings":"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","file":"SingleDropdownRange.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n\taddComponent,\n\tremoveComponent,\n\twatchComponent,\n\tupdateQuery,\n\tsetQueryListener,\n} from '@appbaseio/reactivecore/lib/actions';\nimport {\n\tisEqual,\n\tcheckValueChange,\n\tcheckPropChange,\n\tgetClassName,\n} from '@appbaseio/reactivecore/lib/utils/helper';\n\nimport types from '@appbaseio/reactivecore/lib/utils/types';\n\nimport Title from '../../styles/Title';\nimport Container from '../../styles/Container';\nimport Dropdown from '../shared/Dropdown';\nimport { connect } from '../../utils';\n\nclass SingleDropdownRange extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrentValue: null,\n\t\t};\n\t\tthis.type = 'range';\n\t\tthis.locked = false;\n\t\tprops.setQueryListener(props.componentId, props.onQueryChange, null);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.props.addComponent(this.props.componentId);\n\t\tthis.setReact(this.props);\n\n\t\tif (this.props.selectedValue) {\n\t\t\tthis.setValue(this.props.selectedValue, true);\n\t\t} else if (this.props.defaultSelected) {\n\t\t\tthis.setValue(this.props.defaultSelected, true);\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tcheckPropChange(\n\t\t\tthis.props.react,\n\t\t\tnextProps.react,\n\t\t\t() => this.setReact(nextProps),\n\t\t);\n\n\t\tcheckPropChange(this.props.dataField, nextProps.dataField, () => {\n\t\t\tthis.updateQuery(this.state.currentValue, nextProps);\n\t\t});\n\n\t\tif (!isEqual(this.props.defaultSelected, nextProps.defaultSelected)) {\n\t\t\tthis.setValue(nextProps.defaultSelected, true);\n\t\t} else if (!isEqual(this.state.currentValue, nextProps.selectedValue)) {\n\t\t\tthis.setValue(nextProps.selectedValue, true);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.removeComponent(this.props.componentId);\n\t}\n\n\tsetReact(props) {\n\t\tif (props.react) {\n\t\t\tprops.watchComponent(props.componentId, props.react);\n\t\t}\n\t}\n\n\t// parses range label to get start and end\n\tstatic parseValue = (value, props) => props.data.find(item => item.label === value) || null\n\n\tstatic defaultQuery = (value, props) => {\n\t\tif (value) {\n\t\t\treturn {\n\t\t\t\trange: {\n\t\t\t\t\t[props.dataField]: {\n\t\t\t\t\t\tgte: value.start,\n\t\t\t\t\t\tlte: value.end,\n\t\t\t\t\t\tboost: 2.0,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t};\n\n\tsetValue = (value, isDefaultValue = false, props = this.props) => {\n\t\t// ignore state updates when component is locked\n\t\tif (props.beforeValueChange && this.locked) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.locked = true;\n\t\tlet currentValue = value;\n\t\tif (isDefaultValue) {\n\t\t\tcurrentValue = props.data.find(item => item.label === value) || null;\n\t\t\tcurrentValue = SingleDropdownRange.parseValue(value, props);\n\t\t}\n\n\t\tconst performUpdate = () => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentValue,\n\t\t\t}, () => {\n\t\t\t\tthis.updateQuery(currentValue, props);\n\t\t\t\tthis.locked = false;\n\t\t\t\tif (props.onValueChange) props.onValueChange(currentValue);\n\t\t\t});\n\t\t};\n\n\t\tcheckValueChange(\n\t\t\tprops.componentId,\n\t\t\tcurrentValue,\n\t\t\tprops.beforeValueChange,\n\t\t\tperformUpdate,\n\t\t);\n\t};\n\n\tupdateQuery = (value, props) => {\n\t\tconst query = props.customQuery || SingleDropdownRange.defaultQuery;\n\n\t\tprops.updateQuery({\n\t\t\tcomponentId: props.componentId,\n\t\t\tquery: query(value, props),\n\t\t\tvalue,\n\t\t\tlabel: props.filterLabel,\n\t\t\tshowFilter: props.showFilter,\n\t\t\tURLParams: props.URLParams,\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Container style={this.props.style} className={this.props.className}>\n\t\t\t\t{this.props.title && <Title className={getClassName(this.props.innerClass, 'title') || null}>{this.props.title}</Title>}\n\t\t\t\t<Dropdown\n\t\t\t\t\tinnerClass={this.props.innerClass}\n\t\t\t\t\titems={this.props.data}\n\t\t\t\t\tonChange={this.setValue}\n\t\t\t\t\tselectedItem={this.state.currentValue}\n\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\tkeyField=\"label\"\n\t\t\t\t\treturnsObject\n\t\t\t\t\tthemePreset={this.props.themePreset}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nSingleDropdownRange.propTypes = {\n\taddComponent: types.funcRequired,\n\tremoveComponent: types.funcRequired,\n\tsetQueryListener: types.funcRequired,\n\tupdateQuery: types.funcRequired,\n\twatchComponent: types.funcRequired,\n\tselectedValue: types.selectedValue,\n\t// component props\n\tbeforeValueChange: types.func,\n\tclassName: types.string,\n\tcomponentId: types.stringRequired,\n\tcustomQuery: types.func,\n\tdata: types.data,\n\tdataField: types.stringRequired,\n\tdefaultSelected: types.string,\n\tfilterLabel: types.string,\n\tinnerClass: types.style,\n\tonQueryChange: types.func,\n\tonValueChange: types.func,\n\tplaceholder: types.string,\n\treact: types.react,\n\tshowFilter: types.bool,\n\tstyle: types.style,\n\ttitle: types.title,\n\tthemePreset: types.themePreset,\n\tURLParams: types.bool,\n};\n\nSingleDropdownRange.defaultProps = {\n\tclassName: null,\n\tplaceholder: 'Select a value',\n\tshowFilter: true,\n\tstyle: {},\n\tURLParams: false,\n};\n\nconst mapStateToProps = (state, props) => ({\n\tselectedValue: (\n\t\tstate.selectedValues[props.componentId]\n\t\t&& state.selectedValues[props.componentId].value\n\t) || null,\n\tthemePreset: state.config.themePreset,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n\taddComponent: component => dispatch(addComponent(component)),\n\tremoveComponent: component => dispatch(removeComponent(component)),\n\tupdateQuery: updateQueryObject => dispatch(updateQuery(updateQueryObject)),\n\twatchComponent: (component, react) => dispatch(watchComponent(component, react)),\n\tsetQueryListener: (component, onQueryChange, beforeQueryChange) =>\n\t\tdispatch(setQueryListener(component, onQueryChange, beforeQueryChange)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(SingleDropdownRange);\n"]}