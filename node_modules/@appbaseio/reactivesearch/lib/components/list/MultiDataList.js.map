{"version":3,"sources":["../../../src/components/list/MultiDataList.js"],"names":["MultiDataList","props","state","currentValue","searchTerm","type","locked","setQueryListener","componentId","onQueryChange","componentWillMount","addComponent","setReact","selectedValue","length","setValue","defaultSelected","componentWillReceiveProps","nextProps","react","dataField","updateQuery","Object","keys","selectAllLabel","filter","val","componentWillUnmount","removeComponent","watchComponent","render","data","style","className","title","innerClass","renderSearch","handleClick","showCheckbox","item","showSearch","label","toLowerCase","includes","map","defaultQuery","value","query","queryFormat","Array","isArray","exists","field","listQuery","queryArray","bool","must","isDefaultValue","beforeValueChange","finalValues","forEach","del","obj","rest","performUpdate","setState","onValueChange","customQuery","queryValue","reduce","acc","concat","matchingItem","find","dataItem","filterLabel","showFilter","URLParams","handleInputChange","e","target","placeholder","margin","themePreset","propTypes","funcRequired","func","string","stringRequired","stringArray","queryFormatSearch","boolRequired","defaultProps","mapStateToProps","selectedValues","config","mapDispatchtoProps","dispatch","component","updateQueryObject","beforeQueryChange"],"mappings":";;;;;;AAAA;;;;AAEA;;AAOA;;AAOA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;IAEMA,a;;;AACL,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,+CAClB,sBAAMA,KAAN,CADkB;;AAAA;;AAGlB,QAAKC,KAAL,GAAa;AACZC,iBAAc,EADF;AAEZC,eAAY;AAFA,GAAb;AAIA,QAAKC,IAAL,GAAY,MAAZ;AACA,QAAKC,MAAL,GAAc,KAAd;AACAL,QAAMM,gBAAN,CAAuBN,MAAMO,WAA7B,EAA0CP,MAAMQ,aAAhD,EAA+D,IAA/D;AATkB;AAUlB;;yBAEDC,kB,iCAAqB;AACpB,OAAKT,KAAL,CAAWU,YAAX,CAAwB,KAAKV,KAAL,CAAWO,WAAnC;;AAEA,OAAKI,QAAL,CAAc,KAAKX,KAAnB;;AAEA,MAAI,KAAKA,KAAL,CAAWY,aAAX,CAAyBC,MAA7B,EAAqC;AACpC,QAAKC,QAAL,CAAc,KAAKd,KAAL,CAAWY,aAAzB,EAAwC,IAAxC;AACA,GAFD,MAEO,IAAI,KAAKZ,KAAL,CAAWe,eAAf,EAAgC;AACtC,QAAKD,QAAL,CAAc,KAAKd,KAAL,CAAWe,eAAzB,EAA0C,IAA1C;AACA;AACD,E;;yBAEDC,yB,sCAA0BC,S,EAAW;AAAA;;AACpC,+BACC,KAAKjB,KAAL,CAAWkB,KADZ,EAECD,UAAUC,KAFX,EAGC;AAAA,UAAM,OAAKP,QAAL,CAAcM,SAAd,CAAN;AAAA,GAHD;;AAMA,+BACC,KAAKjB,KAAL,CAAWmB,SADZ,EAECF,UAAUE,SAFX,EAGC,YAAM;AACL,UAAKC,WAAL,CAAiBC,OAAOC,IAAP,CAAY,OAAKrB,KAAL,CAAWC,YAAvB,CAAjB,EAAuDe,SAAvD;AACA,GALF;;AAQA,MAAIL,gBAAgBS,OAAOC,IAAP,CAAY,KAAKrB,KAAL,CAAWC,YAAvB,CAApB;;AAEA,MAAI,KAAKF,KAAL,CAAWuB,cAAf,EAA+B;AAC9BX,mBAAgBA,cAAcY,MAAd,CAAqB;AAAA,WAAOC,QAAQ,OAAKzB,KAAL,CAAWuB,cAA1B;AAAA,IAArB,CAAhB;;AAEA,OAAI,KAAKtB,KAAL,CAAWC,YAAX,CAAwB,KAAKF,KAAL,CAAWuB,cAAnC,CAAJ,EAAwD;AACvDX,oBAAgB,CAAC,KAAKZ,KAAL,CAAWuB,cAAZ,CAAhB;AACA;AACD;;AAED,MAAI,CAAC,qBAAQ,KAAKvB,KAAL,CAAWe,eAAnB,EAAoCE,UAAUF,eAA9C,CAAL,EAAqE;AACpE,QAAKD,QAAL,CAAcG,UAAUF,eAAxB,EAAyC,IAAzC;AACA,GAFD,MAEO,IAAI,CAAC,qBAAQH,aAAR,EAAuBK,UAAUL,aAAjC,CAAL,EAAsD;AAC5D,QAAKE,QAAL,CAAcG,UAAUL,aAAxB,EAAuC,IAAvC;AACA;AACD,E;;yBAEDc,oB,mCAAuB;AACtB,OAAK1B,KAAL,CAAW2B,eAAX,CAA2B,KAAK3B,KAAL,CAAWO,WAAtC;AACA,E;;yBAEDI,Q,qBAASX,K,EAAO;AACf,MAAIA,MAAMkB,KAAV,EAAiB;AAChBlB,SAAM4B,cAAN,CAAqB5B,MAAMO,WAA3B,EAAwCP,MAAMkB,KAA9C;AACA;AACD,E;;yBAiKDW,M,qBAAS;AAAA;;AAAA,MACAN,cADA,GACmB,KAAKvB,KADxB,CACAuB,cADA;;;AAGR,MAAI,KAAKvB,KAAL,CAAW8B,IAAX,CAAgBjB,MAAhB,KAA2B,CAA/B,EAAkC;AACjC,UAAO,IAAP;AACA;;AAED,SACC;AAAA;AAAA,KAAW,OAAO,KAAKb,KAAL,CAAW+B,KAA7B,EAAoC,WAAW,KAAK/B,KAAL,CAAWgC,SAA1D;AACE,QAAKhC,KAAL,CAAWiC,KAAX,IAAoB;AAAA;AAAA,MAAO,WAAW,0BAAa,KAAKjC,KAAL,CAAWkC,UAAxB,EAAoC,OAApC,KAAgD,IAAlE;AAAyE,SAAKlC,KAAL,CAAWiC;AAApF,IADtB;AAEE,QAAKE,YAAL,EAFF;AAGC;AAAA;AAAA,MAAI,WAAW,0BAAa,KAAKnC,KAAL,CAAWkC,UAAxB,EAAoC,MAApC,KAA+C,IAA9D;AAEEX,qBAEE;AAAA;AAAA,OAAI,KAAKA,cAAT,EAAyB,iBAAc,KAAKtB,KAAL,CAAWC,YAAX,CAAwBqB,cAAxB,IAA0C,QAA1C,GAAqD,EAAnE,CAAzB;AACC;AACC,iBAAW,0BAAa,KAAKvB,KAAL,CAAWkC,UAAxB,EAAoC,UAApC,KAAmD,IAD/D;AAEC,UAAO,KAAKlC,KAAL,CAAWO,WAAlB,SAAiCgB,cAFlC;AAGC,YAAMA,cAHP;AAIC,aAAOA,cAJR;AAKC,gBAAU,KAAKa,WALhB;AAMC,eAAS,CAAC,CAAC,KAAKnC,KAAL,CAAWC,YAAX,CAAwBqB,cAAxB,CANZ;AAOC,YAAM,KAAKvB,KAAL,CAAWqC;AAPlB,OADD;AAUC;AAAA;AAAA;AACC,kBAAW,0BAAa,KAAKrC,KAAL,CAAWkC,UAAxB,EAAoC,OAApC,KAAgD,IAD5D;AAEC,gBAAY,KAAKlC,KAAL,CAAWO,WAAvB,SAAsCgB;AAFvC;AAIEA;AAJF;AAVD,KAFF,GAoBG,IAtBL;AAyBE,SAAKvB,KAAL,CAAW8B,IAAX,CACEN,MADF,CACS,UAACc,IAAD,EAAU;AACjB,SAAI,OAAKtC,KAAL,CAAWuC,UAAX,IAAyB,OAAKtC,KAAL,CAAWE,UAAxC,EAAoD;AACnD,aAAOmC,KAAKE,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,OAAKzC,KAAL,CAAWE,UAAX,CAAsBsC,WAAtB,EAAlC,CAAP;AACA;AACD,YAAO,IAAP;AACA,KANF,EAOEE,GAPF,CAOM;AAAA,YACJ;AAAA;AAAA,QAAI,KAAKL,KAAKE,KAAd,EAAqB,iBAAc,OAAKvC,KAAL,CAAWC,YAAX,CAAwBoC,KAAKE,KAA7B,IAAsC,QAAtC,GAAiD,EAA/D,CAArB;AACC;AACC,kBAAW,0BAAa,OAAKxC,KAAL,CAAWkC,UAAxB,EAAoC,UAApC,KAAmD,IAD/D;AAEC,WAAO,OAAKlC,KAAL,CAAWO,WAAlB,SAAiC+B,KAAKE,KAFvC;AAGC,aAAM,OAAKxC,KAAL,CAAWO,WAHlB;AAIC,cAAO+B,KAAKE,KAJb;AAKC,iBAAU,OAAKJ,WALhB;AAMC,gBAAS,CAAC,CAAC,OAAKnC,KAAL,CAAWC,YAAX,CAAwBoC,KAAKE,KAA7B,CANZ;AAOC,aAAM,OAAKxC,KAAL,CAAWqC;AAPlB,QADD;AAUC;AAAA;AAAA;AACC,mBAAW,0BAAa,OAAKrC,KAAL,CAAWkC,UAAxB,EAAoC,OAApC,KAAgD,IAD5D;AAEC,iBAAY,OAAKlC,KAAL,CAAWO,WAAvB,SAAsC+B,KAAKE;AAF5C;AAIEF,YAAKE;AAJP;AAVD,MADI;AAAA,KAPN;AAzBF;AAHD,GADD;AA2DA,E;;;;;;;;MAjODI,Y,GAAe,UAACC,KAAD,EAAQ7C,KAAR,EAAkB;AAChC,MAAI8C,QAAQ,IAAZ;AACA,MAAM1C,OAAOJ,MAAM+C,WAAN,KAAsB,IAAtB,GAA6B,OAA7B,GAAuC,MAApD;AACA,MACC,OAAK/C,KAAL,CAAWuB,cAAX,IAA6ByB,MAAMC,OAAN,CAAcJ,KAAd,CAA7B,IAAqDA,MAAMH,QAAN,CAAe,OAAK1C,KAAL,CAAWuB,cAA1B,CADtD,EAEE;AACDuB,WAAQ;AACPI,YAAQ;AACPC,YAAOnD,MAAMmB;AADN;AADD,IAAR;AAKA,GARD,MAQO,IAAI0B,KAAJ,EAAW;AACjB,OAAIO,kBAAJ;AACA,OAAIpD,MAAM+C,WAAN,KAAsB,IAA1B,EAAgC;AAAA;;AAC/BK,6CACEhD,IADF,uBAEGJ,MAAMmB,SAFT,IAEqB0B,KAFrB;AAKA,IAND,MAMO;AACN;AACA,QAAMQ,aAAaR,MAAMF,GAAN,CAAU;AAAA;;AAAA,4BAE1BvC,IAF0B,yBAGzBJ,MAAMmB,SAHmB,IAGPmB,IAHO;AAAA,KAAV,CAAnB;AAOAc,gBAAY;AACXE,WAAM;AACLC,YAAMF;AADD;AADK,KAAZ;AAKA;;AAEDP,WAAQD,MAAMhC,MAAN,GAAeuC,SAAf,GAA2B,IAAnC;AACA;AACD,SAAON,KAAP;AACA,E;;MAEDhC,Q,GAAW,UAAC+B,KAAD,EAAuD;AAAA,MAA/CW,cAA+C,uEAA9B,KAA8B;AAAA,MAAvBxD,KAAuB,uEAAf,OAAKA,KAAU;;AACjE;AACA,MAAIA,MAAMyD,iBAAN,IAA2B,OAAKpD,MAApC,EAA4C;AAC3C;AACA;;AAED,SAAKA,MAAL,GAAc,IAAd;AANiE,MAOzDkB,cAPyD,GAOtC,OAAKvB,KAPiC,CAOzDuB,cAPyD;AAAA,MAQ3DrB,YAR2D,GAQ1C,OAAKD,KARqC,CAQ3DC,YAR2D;;AASjE,MAAIwD,cAAc,IAAlB;;AAEA,MAAInC,mBACEyB,MAAMC,OAAN,CAAcJ,KAAd,KAAwBA,MAAMH,QAAN,CAAenB,cAAf,CAAzB,IACA,OAAOsB,KAAP,KAAiB,QAAjB,IAA6BA,UAAUtB,cAFxC,CAAJ,EAE8D;AAC7D,OAAIrB,aAAaqB,cAAb,CAAJ,EAAkC;AACjCrB,mBAAe,EAAf;AACAwD,kBAAc,EAAd;AACA,IAHD,MAGO;AACN1D,UAAM8B,IAAN,CAAW6B,OAAX,CAAmB,UAACrB,IAAD,EAAU;AAC5BpC,kBAAaoC,KAAKE,KAAlB,IAA2B,IAA3B;AACA,KAFD;AAGAtC,iBAAaqB,cAAb,IAA+B,IAA/B;AACAmC,kBAAc,CAACnC,cAAD,CAAd;AACA;AACD,GAbD,MAaO,IAAIiC,cAAJ,EAAoB;AAC1BE,iBAAcb,KAAd;AACA3C,kBAAe,EAAf;AACA,OAAI2C,KAAJ,EAAW;AACVA,UAAMc,OAAN,CAAc,UAACrB,IAAD,EAAU;AACvBpC,kBAAaoC,IAAb,IAAqB,IAArB;AACA,KAFD;AAGA;;AAED,OAAIf,kBAAkBA,kBAAkBrB,YAAxC,EAAsD;AAAA,wBACXA,YADW;AAAA,QAC3B0D,GAD2B,iBAC5CrC,cAD4C;AAAA,QACnBsC,GADmB,4CAC5CtC,cAD4C;;AAErDrB,gCAAoB2D,GAApB;AACA;AACD,GAbM,MAaA;AACN,OAAI3D,aAAa2C,KAAb,CAAJ,EAAyB;AAAA,yBACU3C,YADV;AAAA,QACP0D,IADO,kBACff,KADe;AAAA,QACCiB,IADD,6CACfjB,KADe;;AAExB3C,gCAAoB4D,IAApB;AACA,IAHD,MAGO;AACN5D,iBAAa2C,KAAb,IAAsB,IAAtB;AACA;;AAED,OAAItB,kBAAkBA,kBAAkBrB,YAAxC,EAAsD;AAAA,yBACXA,YADW;AAAA,QAC3B0D,KAD2B,kBAC5CrC,cAD4C;AAAA,QACnBsC,IADmB,6CAC5CtC,cAD4C;;AAErDrB,gCAAoB2D,IAApB;AACA;AACDH,iBAAcrC,OAAOC,IAAP,CAAYpB,YAAZ,CAAd;AACA;;AAED,MAAM6D,gBAAgB,SAAhBA,aAAgB,GAAM;AAC3B,UAAKC,QAAL,CAAc;AACb9D;AADa,IAAd,EAEG,YAAM;AACR,WAAKkB,WAAL,CAAiBsC,WAAjB,EAA8B1D,KAA9B;AACA,WAAKK,MAAL,GAAc,KAAd;AACA,QAAIL,MAAMiE,aAAV,EAAyBjE,MAAMiE,aAAN,CAAoBP,WAApB;AACzB,IAND;AAOA,GARD;;AAUA,gCACC1D,MAAMO,WADP,EAECmD,WAFD,EAGC1D,MAAMyD,iBAHP,EAICM,aAJD;AAMA,E;;MAED3C,W,GAAc,UAACyB,KAAD,EAAQ7C,KAAR,EAAkB;AAC/B,MAAM8C,QAAQ9C,MAAMkE,WAAN,IAAqB,OAAKtB,YAAxC;;AAEA;AACA,MAAMuB,aAAatB,MAAMuB,MAAN,CAAa,UAACC,GAAD,EAAM/B,IAAN,EAAe;AAC9C,OAAIA,SAAStC,MAAMuB,cAAnB,EAAmC;AAClC,WAAO8C,IAAIC,MAAJ,CAAWhC,IAAX,CAAP;AACA;AACD,OAAMiC,eAAevE,MAAM8B,IAAN,CAAW0C,IAAX,CAAgB;AAAA,WAAYC,SAASjC,KAAT,KAAmBF,IAA/B;AAAA,IAAhB,CAArB;AACA,UAAOiC,eAAeF,IAAIC,MAAJ,CAAWC,aAAa1B,KAAxB,CAAf,GAAgDwB,GAAvD;AACA,GANkB,EAMhB,EANgB,CAAnB;;AAQArE,QAAMoB,WAAN,CAAkB;AACjBb,gBAAaP,MAAMO,WADF;AAEjBuC,UAAOA,MAAMqB,UAAN,EAAkBnE,KAAlB,CAFU;AAGjB6C,eAHiB;AAIjBL,UAAOxC,MAAM0E,WAJI;AAKjBC,eAAY3E,MAAM2E,UALD;AAMjBC,cAAW5E,MAAM4E;AANA,GAAlB;AAQA,E;;MAEDC,iB,GAAoB,UAACC,CAAD,EAAO;AAAA,MAClBjC,KADkB,GACRiC,EAAEC,MADM,CAClBlC,KADkB;;AAE1B,SAAKmB,QAAL,CAAc;AACb7D,eAAY0C;AADC,GAAd;AAGA,E;;MAEDV,Y,GAAe,YAAM;AACpB,MAAI,OAAKnC,KAAL,CAAWuC,UAAf,EAA2B;AAC1B,UAAQ;AACP,eAAW,0BAAa,OAAKvC,KAAL,CAAWkC,UAAxB,EAAoC,OAApC,KAAgD,IADpD;AAEP,cAAU,OAAK2C,iBAFR;AAGP,WAAO,OAAK5E,KAAL,CAAWE,UAHX;AAIP,iBAAa,OAAKH,KAAL,CAAWgF,WAJjB;AAKP,WAAO;AACNC,aAAQ;AADF,KALA;AAQP,iBAAa,OAAKjF,KAAL,CAAWkF;AARjB,KAAR;AAUA;AACD,SAAO,IAAP;AACA,E;;MAED9C,W,GAAc,UAAC0C,CAAD,EAAO;AACpB,SAAKhE,QAAL,CAAcgE,EAAEC,MAAF,CAASlC,KAAvB;AACA,E;;;AAuEF9C,cAAcoF,SAAd,GAA0B;AACzBzE,eAAc,gBAAM0E,YADK;AAEzBzD,kBAAiB,gBAAMyD,YAFE;AAGzB9E,mBAAkB,gBAAM8E,YAHC;AAIzBhE,cAAa,gBAAMgE,YAJM;AAKzBxD,iBAAgB,gBAAMwD,YALG;AAMzBxE,gBAAe,gBAAMA,aANI;AAOzB;AACA6C,oBAAmB,gBAAM4B,IARA;AASzBrD,YAAW,gBAAMsD,MATQ;AAUzB/E,cAAa,gBAAMgF,cAVM;AAWzBrB,cAAa,gBAAMmB,IAXM;AAYzBvD,OAAM,gBAAMA,IAZa;AAazBX,YAAW,gBAAMoE,cAbQ;AAczBxE,kBAAiB,gBAAMyE,WAdE;AAezBd,cAAa,gBAAMY,MAfM;AAgBzBpD,aAAY,gBAAMH,KAhBO;AAiBzBvB,gBAAe,gBAAM6E,IAjBI;AAkBzBpB,gBAAe,gBAAMoB,IAlBI;AAmBzBL,cAAa,gBAAMM,MAnBM;AAoBzBvC,cAAa,gBAAM0C,iBApBM;AAqBzBvE,QAAO,gBAAMA,KArBY;AAsBzBK,iBAAgB,gBAAM+D,MAtBG;AAuBzBjD,eAAc,gBAAMqD,YAvBK;AAwBzBf,aAAY,gBAAMrB,IAxBO;AAyBzBf,aAAY,gBAAMe,IAzBO;AA0BzBvB,QAAO,gBAAMA,KA1BY;AA2BzBmD,cAAa,gBAAMA,WA3BM;AA4BzBjD,QAAO,gBAAMA,KA5BY;AA6BzB2C,YAAW,gBAAMtB;AA7BQ,CAA1B;;AAgCAvD,cAAc4F,YAAd,GAA6B;AAC5B3D,YAAW,IADiB;AAE5BgD,cAAa,QAFe;AAG5BjC,cAAa,IAHe;AAI5BV,eAAc,IAJc;AAK5BsC,aAAY,IALgB;AAM5BpC,aAAY,IANgB;AAO5BR,QAAO,EAPqB;AAQ5B6C,YAAW;AARiB,CAA7B;;AAWA,IAAMgB,kBAAkB,SAAlBA,eAAkB,CAAC3F,KAAD,EAAQD,KAAR;AAAA,QAAmB;AAC1CY,iBAAgBX,MAAM4F,cAAN,CAAqB7F,MAAMO,WAA3B,KACZN,MAAM4F,cAAN,CAAqB7F,MAAMO,WAA3B,EAAwCsC,KAD7B,IACuC,EAFZ;AAG1CqC,eAAajF,MAAM6F,MAAN,CAAaZ;AAHgB,EAAnB;AAAA,CAAxB;;AAMA,IAAMa,qBAAqB,SAArBA,kBAAqB;AAAA,QAAa;AACvCrF,gBAAc;AAAA,UAAasF,SAAS,2BAAaC,SAAb,CAAT,CAAb;AAAA,GADyB;AAEvCtE,mBAAiB;AAAA,UAAaqE,SAAS,8BAAgBC,SAAhB,CAAT,CAAb;AAAA,GAFsB;AAGvC7E,eAAa;AAAA,UAAqB4E,SAAS,0BAAYE,iBAAZ,CAAT,CAArB;AAAA,GAH0B;AAIvCtE,kBAAgB,wBAACqE,SAAD,EAAY/E,KAAZ;AAAA,UAAsB8E,SAAS,6BAAeC,SAAf,EAA0B/E,KAA1B,CAAT,CAAtB;AAAA,GAJuB;AAKvCZ,oBAAkB,0BAAC2F,SAAD,EAAYzF,aAAZ,EAA2B2F,iBAA3B;AAAA,UACjBH,SAAS,+BAAiBC,SAAjB,EAA4BzF,aAA5B,EAA2C2F,iBAA3C,CAAT,CADiB;AAAA;AALqB,EAAb;AAAA,CAA3B;;kBASe,oBAAQP,eAAR,EAAyBG,kBAAzB,EAA6ChG,aAA7C,C","file":"MultiDataList.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n\taddComponent,\n\tremoveComponent,\n\twatchComponent,\n\tupdateQuery,\n\tsetQueryListener,\n} from '@appbaseio/reactivecore/lib/actions';\nimport {\n\tisEqual,\n\tcheckValueChange,\n\tcheckPropChange,\n\tgetClassName,\n} from '@appbaseio/reactivecore/lib/utils/helper';\n\nimport types from '@appbaseio/reactivecore/lib/utils/types';\n\nimport Title from '../../styles/Title';\nimport Input from '../../styles/Input';\nimport Container from '../../styles/Container';\nimport { UL, Checkbox } from '../../styles/FormControlList';\nimport { connect } from '../../utils';\n\nclass MultiDataList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrentValue: {},\n\t\t\tsearchTerm: '',\n\t\t};\n\t\tthis.type = 'term';\n\t\tthis.locked = false;\n\t\tprops.setQueryListener(props.componentId, props.onQueryChange, null);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.props.addComponent(this.props.componentId);\n\n\t\tthis.setReact(this.props);\n\n\t\tif (this.props.selectedValue.length) {\n\t\t\tthis.setValue(this.props.selectedValue, true);\n\t\t} else if (this.props.defaultSelected) {\n\t\t\tthis.setValue(this.props.defaultSelected, true);\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tcheckPropChange(\n\t\t\tthis.props.react,\n\t\t\tnextProps.react,\n\t\t\t() => this.setReact(nextProps),\n\t\t);\n\n\t\tcheckPropChange(\n\t\t\tthis.props.dataField,\n\t\t\tnextProps.dataField,\n\t\t\t() => {\n\t\t\t\tthis.updateQuery(Object.keys(this.state.currentValue), nextProps);\n\t\t\t},\n\t\t);\n\n\t\tlet selectedValue = Object.keys(this.state.currentValue);\n\n\t\tif (this.props.selectAllLabel) {\n\t\t\tselectedValue = selectedValue.filter(val => val !== this.props.selectAllLabel);\n\n\t\t\tif (this.state.currentValue[this.props.selectAllLabel]) {\n\t\t\t\tselectedValue = [this.props.selectAllLabel];\n\t\t\t}\n\t\t}\n\n\t\tif (!isEqual(this.props.defaultSelected, nextProps.defaultSelected)) {\n\t\t\tthis.setValue(nextProps.defaultSelected, true);\n\t\t} else if (!isEqual(selectedValue, nextProps.selectedValue)) {\n\t\t\tthis.setValue(nextProps.selectedValue, true);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.removeComponent(this.props.componentId);\n\t}\n\n\tsetReact(props) {\n\t\tif (props.react) {\n\t\t\tprops.watchComponent(props.componentId, props.react);\n\t\t}\n\t}\n\n\tdefaultQuery = (value, props) => {\n\t\tlet query = null;\n\t\tconst type = props.queryFormat === 'or' ? 'terms' : 'term';\n\t\tif (\n\t\t\tthis.props.selectAllLabel && Array.isArray(value) && value.includes(this.props.selectAllLabel)\n\t\t) {\n\t\t\tquery = {\n\t\t\t\texists: {\n\t\t\t\t\tfield: props.dataField,\n\t\t\t\t},\n\t\t\t};\n\t\t} else if (value) {\n\t\t\tlet listQuery;\n\t\t\tif (props.queryFormat === 'or') {\n\t\t\t\tlistQuery = {\n\t\t\t\t\t[type]: {\n\t\t\t\t\t\t[props.dataField]: value,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// adds a sub-query with must as an array of objects for each term/value\n\t\t\t\tconst queryArray = value.map(item => (\n\t\t\t\t\t{\n\t\t\t\t\t\t[type]: {\n\t\t\t\t\t\t\t[props.dataField]: item,\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t));\n\t\t\t\tlistQuery = {\n\t\t\t\t\tbool: {\n\t\t\t\t\t\tmust: queryArray,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tquery = value.length ? listQuery : null;\n\t\t}\n\t\treturn query;\n\t};\n\n\tsetValue = (value, isDefaultValue = false, props = this.props) => {\n\t\t// ignore state updates when component is locked\n\t\tif (props.beforeValueChange && this.locked) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.locked = true;\n\t\tconst { selectAllLabel } = this.props;\n\t\tlet { currentValue } = this.state;\n\t\tlet finalValues = null;\n\n\t\tif (selectAllLabel\n\t\t\t&& ((Array.isArray(value) && value.includes(selectAllLabel))\n\t\t\t|| (typeof value === 'string' && value === selectAllLabel))) {\n\t\t\tif (currentValue[selectAllLabel]) {\n\t\t\t\tcurrentValue = {};\n\t\t\t\tfinalValues = [];\n\t\t\t} else {\n\t\t\t\tprops.data.forEach((item) => {\n\t\t\t\t\tcurrentValue[item.label] = true;\n\t\t\t\t});\n\t\t\t\tcurrentValue[selectAllLabel] = true;\n\t\t\t\tfinalValues = [selectAllLabel];\n\t\t\t}\n\t\t} else if (isDefaultValue) {\n\t\t\tfinalValues = value;\n\t\t\tcurrentValue = {};\n\t\t\tif (value) {\n\t\t\t\tvalue.forEach((item) => {\n\t\t\t\t\tcurrentValue[item] = true;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (selectAllLabel && selectAllLabel in currentValue) {\n\t\t\t\tconst { [selectAllLabel]: del, ...obj } = currentValue;\n\t\t\t\tcurrentValue = { ...obj };\n\t\t\t}\n\t\t} else {\n\t\t\tif (currentValue[value]) {\n\t\t\t\tconst { [value]: del, ...rest } = currentValue;\n\t\t\t\tcurrentValue = { ...rest };\n\t\t\t} else {\n\t\t\t\tcurrentValue[value] = true;\n\t\t\t}\n\n\t\t\tif (selectAllLabel && selectAllLabel in currentValue) {\n\t\t\t\tconst { [selectAllLabel]: del, ...obj } = currentValue;\n\t\t\t\tcurrentValue = { ...obj };\n\t\t\t}\n\t\t\tfinalValues = Object.keys(currentValue);\n\t\t}\n\n\t\tconst performUpdate = () => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentValue,\n\t\t\t}, () => {\n\t\t\t\tthis.updateQuery(finalValues, props);\n\t\t\t\tthis.locked = false;\n\t\t\t\tif (props.onValueChange) props.onValueChange(finalValues);\n\t\t\t});\n\t\t};\n\n\t\tcheckValueChange(\n\t\t\tprops.componentId,\n\t\t\tfinalValues,\n\t\t\tprops.beforeValueChange,\n\t\t\tperformUpdate,\n\t\t);\n\t};\n\n\tupdateQuery = (value, props) => {\n\t\tconst query = props.customQuery || this.defaultQuery;\n\n\t\t// find the corresponding value of the label for running the query\n\t\tconst queryValue = value.reduce((acc, item) => {\n\t\t\tif (item === props.selectAllLabel) {\n\t\t\t\treturn acc.concat(item);\n\t\t\t}\n\t\t\tconst matchingItem = props.data.find(dataItem => dataItem.label === item);\n\t\t\treturn matchingItem ? acc.concat(matchingItem.value) : acc;\n\t\t}, []);\n\n\t\tprops.updateQuery({\n\t\t\tcomponentId: props.componentId,\n\t\t\tquery: query(queryValue, props),\n\t\t\tvalue,\n\t\t\tlabel: props.filterLabel,\n\t\t\tshowFilter: props.showFilter,\n\t\t\tURLParams: props.URLParams,\n\t\t});\n\t};\n\n\thandleInputChange = (e) => {\n\t\tconst { value } = e.target;\n\t\tthis.setState({\n\t\t\tsearchTerm: value,\n\t\t});\n\t};\n\n\trenderSearch = () => {\n\t\tif (this.props.showSearch) {\n\t\t\treturn (<Input\n\t\t\t\tclassName={getClassName(this.props.innerClass, 'input') || null}\n\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\tvalue={this.state.searchTerm}\n\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\tstyle={{\n\t\t\t\t\tmargin: '0 0 8px',\n\t\t\t\t}}\n\t\t\t\tthemePreset={this.props.themePreset}\n\t\t\t/>);\n\t\t}\n\t\treturn null;\n\t};\n\n\thandleClick = (e) => {\n\t\tthis.setValue(e.target.value);\n\t};\n\n\trender() {\n\t\tconst { selectAllLabel } = this.props;\n\n\t\tif (this.props.data.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<Container style={this.props.style} className={this.props.className}>\n\t\t\t\t{this.props.title && <Title className={getClassName(this.props.innerClass, 'title') || null}>{this.props.title}</Title>}\n\t\t\t\t{this.renderSearch()}\n\t\t\t\t<UL className={getClassName(this.props.innerClass, 'list') || null}>\n\t\t\t\t\t{\n\t\t\t\t\t\tselectAllLabel\n\t\t\t\t\t\t\t? (\n\t\t\t\t\t\t\t\t<li key={selectAllLabel} className={`${this.state.currentValue[selectAllLabel] ? 'active' : ''}`}>\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'checkbox') || null}\n\t\t\t\t\t\t\t\t\t\tid={`${this.props.componentId}-${selectAllLabel}`}\n\t\t\t\t\t\t\t\t\t\tname={selectAllLabel}\n\t\t\t\t\t\t\t\t\t\tvalue={selectAllLabel}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleClick}\n\t\t\t\t\t\t\t\t\t\tchecked={!!this.state.currentValue[selectAllLabel]}\n\t\t\t\t\t\t\t\t\t\tshow={this.props.showCheckbox}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'label') || null}\n\t\t\t\t\t\t\t\t\t\thtmlFor={`${this.props.componentId}-${selectAllLabel}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{selectAllLabel}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.data\n\t\t\t\t\t\t\t.filter((item) => {\n\t\t\t\t\t\t\t\tif (this.props.showSearch && this.state.searchTerm) {\n\t\t\t\t\t\t\t\t\treturn item.label.toLowerCase().includes(this.state.searchTerm.toLowerCase());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.map(item => (\n\t\t\t\t\t\t\t\t<li key={item.label} className={`${this.state.currentValue[item.label] ? 'active' : ''}`}>\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'checkbox') || null}\n\t\t\t\t\t\t\t\t\t\tid={`${this.props.componentId}-${item.label}`}\n\t\t\t\t\t\t\t\t\t\tname={this.props.componentId}\n\t\t\t\t\t\t\t\t\t\tvalue={item.label}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleClick}\n\t\t\t\t\t\t\t\t\t\tchecked={!!this.state.currentValue[item.label]}\n\t\t\t\t\t\t\t\t\t\tshow={this.props.showCheckbox}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'label') || null}\n\t\t\t\t\t\t\t\t\t\thtmlFor={`${this.props.componentId}-${item.label}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</UL>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nMultiDataList.propTypes = {\n\taddComponent: types.funcRequired,\n\tremoveComponent: types.funcRequired,\n\tsetQueryListener: types.funcRequired,\n\tupdateQuery: types.funcRequired,\n\twatchComponent: types.funcRequired,\n\tselectedValue: types.selectedValue,\n\t// component props\n\tbeforeValueChange: types.func,\n\tclassName: types.string,\n\tcomponentId: types.stringRequired,\n\tcustomQuery: types.func,\n\tdata: types.data,\n\tdataField: types.stringRequired,\n\tdefaultSelected: types.stringArray,\n\tfilterLabel: types.string,\n\tinnerClass: types.style,\n\tonQueryChange: types.func,\n\tonValueChange: types.func,\n\tplaceholder: types.string,\n\tqueryFormat: types.queryFormatSearch,\n\treact: types.react,\n\tselectAllLabel: types.string,\n\tshowCheckbox: types.boolRequired,\n\tshowFilter: types.bool,\n\tshowSearch: types.bool,\n\tstyle: types.style,\n\tthemePreset: types.themePreset,\n\ttitle: types.title,\n\tURLParams: types.bool,\n};\n\nMultiDataList.defaultProps = {\n\tclassName: null,\n\tplaceholder: 'Search',\n\tqueryFormat: 'or',\n\tshowCheckbox: true,\n\tshowFilter: true,\n\tshowSearch: true,\n\tstyle: {},\n\tURLParams: false,\n};\n\nconst mapStateToProps = (state, props) => ({\n\tselectedValue: (state.selectedValues[props.componentId]\n\t\t&& state.selectedValues[props.componentId].value) || [],\n\tthemePreset: state.config.themePreset,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n\taddComponent: component => dispatch(addComponent(component)),\n\tremoveComponent: component => dispatch(removeComponent(component)),\n\tupdateQuery: updateQueryObject => dispatch(updateQuery(updateQueryObject)),\n\twatchComponent: (component, react) => dispatch(watchComponent(component, react)),\n\tsetQueryListener: (component, onQueryChange, beforeQueryChange) =>\n\t\tdispatch(setQueryListener(component, onQueryChange, beforeQueryChange)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(MultiDataList);\n"]}