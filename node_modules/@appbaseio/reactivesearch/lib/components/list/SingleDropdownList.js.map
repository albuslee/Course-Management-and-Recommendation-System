{"version":3,"sources":["../../../src/components/list/SingleDropdownList.js"],"names":["SingleDropdownList","props","state","currentValue","options","locked","internalComponent","componentId","setQueryListener","onQueryChange","componentWillMount","addComponent","updateQueryOptions","setReact","selectedValue","setValue","defaultSelected","componentWillReceiveProps","nextProps","react","setState","dataField","buckets","updateQuery","componentWillUnmount","removeComponent","generateQueryOptions","queryOptions","aggs","terms","field","size","order","sortBy","showMissing","missing","missingLabel","render","selectAll","length","selectAllLabel","key","style","className","title","innerClass","filter","String","item","trim","map","placeholder","showCount","themePreset","renderListItem","defaultQuery","value","match_all","exists","bool","must_not","term","newReact","watchComponent","and","beforeValueChange","performUpdate","onValueChange","query","customQuery","label","filterLabel","showFilter","URLParams","setQueryOptions","propTypes","funcRequired","func","string","stringRequired","number","sortByWithCount","defaultProps","mapStateToProps","aggregations","selectedValues","config","mapDispatchtoProps","dispatch","component","beforeQueryChange","updateQueryObject"],"mappings":"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","file":"SingleDropdownList.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n\taddComponent,\n\tremoveComponent,\n\twatchComponent,\n\tupdateQuery,\n\tsetQueryOptions,\n\tsetQueryListener,\n} from '@appbaseio/reactivecore/lib/actions';\nimport {\n\tgetQueryOptions,\n\tpushToAndClause,\n\tcheckValueChange,\n\tgetAggsOrder,\n\tcheckPropChange,\n\tcheckSomePropChange,\n\tgetClassName,\n} from '@appbaseio/reactivecore/lib/utils/helper';\n\nimport types from '@appbaseio/reactivecore/lib/utils/types';\n\nimport Title from '../../styles/Title';\nimport Container from '../../styles/Container';\nimport Dropdown from '../shared/Dropdown';\nimport { connect } from '../../utils';\n\nclass SingleDropdownList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrentValue: '',\n\t\t\toptions: [],\n\t\t};\n\t\tthis.locked = false;\n\t\tthis.internalComponent = `${props.componentId}__internal`;\n\t\tprops.setQueryListener(props.componentId, props.onQueryChange, null);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.props.addComponent(this.internalComponent);\n\t\tthis.props.addComponent(this.props.componentId);\n\t\tthis.updateQueryOptions(this.props);\n\n\t\tthis.setReact(this.props);\n\n\t\tif (this.props.selectedValue) {\n\t\t\tthis.setValue(this.props.selectedValue);\n\t\t} else if (this.props.defaultSelected) {\n\t\t\tthis.setValue(this.props.defaultSelected);\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tcheckPropChange(\n\t\t\tthis.props.react,\n\t\t\tnextProps.react,\n\t\t\t() => this.setReact(nextProps),\n\t\t);\n\t\tcheckPropChange(\n\t\t\tthis.props.options,\n\t\t\tnextProps.options,\n\t\t\t() => {\n\t\t\t\tthis.setState({\n\t\t\t\t\toptions: nextProps.options[nextProps.dataField]\n\t\t\t\t\t\t? nextProps.options[nextProps.dataField].buckets\n\t\t\t\t\t\t: [],\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\t\tcheckSomePropChange(\n\t\t\tthis.props,\n\t\t\tnextProps,\n\t\t\t['size', 'sortBy'],\n\t\t\t() => this.updateQueryOptions(nextProps),\n\t\t);\n\n\t\tcheckPropChange(\n\t\t\tthis.props.dataField,\n\t\t\tnextProps.dataField,\n\t\t\t() => {\n\t\t\t\tthis.updateQueryOptions(nextProps);\n\t\t\t\tthis.updateQuery(this.state.currentValue, nextProps);\n\t\t\t},\n\t\t);\n\n\t\tif (this.props.defaultSelected !== nextProps.defaultSelected) {\n\t\t\tthis.setValue(nextProps.defaultSelected);\n\t\t} else if (this.state.currentValue !== nextProps.selectedValue) {\n\t\t\tthis.setValue(nextProps.selectedValue || '');\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.removeComponent(this.props.componentId);\n\t\tthis.props.removeComponent(this.internalComponent);\n\t}\n\n\tsetReact = (props) => {\n\t\tconst { react } = props;\n\t\tif (react) {\n\t\t\tconst newReact = pushToAndClause(react, this.internalComponent);\n\t\t\tprops.watchComponent(props.componentId, newReact);\n\t\t} else {\n\t\t\tprops.watchComponent(props.componentId, { and: this.internalComponent });\n\t\t}\n\t};\n\n\tstatic defaultQuery = (value, props) => {\n\t\tif (props.selectAllLabel && props.selectAllLabel === value) {\n\t\t\tif (props.showMissing) {\n\t\t\t\treturn { match_all: {} };\n\t\t\t}\n\t\t\treturn {\n\t\t\t\texists: {\n\t\t\t\t\tfield: props.dataField,\n\t\t\t\t},\n\t\t\t};\n\t\t} else if (value) {\n\t\t\tif (props.showMissing && props.missingLabel === value) {\n\t\t\t\treturn {\n\t\t\t\t\tbool: {\n\t\t\t\t\t\tmust_not: {\n\t\t\t\t\t\t\texists: { field: props.dataField },\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tterm: {\n\t\t\t\t\t[props.dataField]: value,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetValue = (value, props = this.props) => {\n\t\t// ignore state updates when component is locked\n\t\tif (props.beforeValueChange && this.locked) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.locked = true;\n\t\tconst performUpdate = () => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentValue: value,\n\t\t\t}, () => {\n\t\t\t\tthis.updateQuery(value, props);\n\t\t\t\tthis.locked = false;\n\t\t\t\tif (props.onValueChange) props.onValueChange(value);\n\t\t\t});\n\t\t};\n\n\t\tcheckValueChange(\n\t\t\tprops.componentId,\n\t\t\tvalue,\n\t\t\tprops.beforeValueChange,\n\t\t\tperformUpdate,\n\t\t);\n\t};\n\n\tupdateQuery = (value, props) => {\n\t\tconst query = props.customQuery || SingleDropdownList.defaultQuery;\n\n\t\tprops.updateQuery({\n\t\t\tcomponentId: props.componentId,\n\t\t\tquery: query(value, props),\n\t\t\tvalue,\n\t\t\tlabel: props.filterLabel,\n\t\t\tshowFilter: props.showFilter,\n\t\t\tURLParams: props.URLParams,\n\t\t});\n\t};\n\n\tstatic generateQueryOptions(props) {\n\t\tconst queryOptions = getQueryOptions(props);\n\t\tqueryOptions.aggs = {\n\t\t\t[props.dataField]: {\n\t\t\t\tterms: {\n\t\t\t\t\tfield: props.dataField,\n\t\t\t\t\tsize: props.size,\n\t\t\t\t\torder: getAggsOrder(props.sortBy || 'count'),\n\t\t\t\t\t...(props.showMissing ? { missing: props.missingLabel } : {}),\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t\treturn queryOptions;\n\t}\n\n\tupdateQueryOptions = (props) => {\n\t\tconst queryOptions = SingleDropdownList.generateQueryOptions(props);\n\t\tprops.setQueryOptions(this.internalComponent, queryOptions);\n\t};\n\n\trender() {\n\t\tlet selectAll = [];\n\n\t\tif (this.state.options.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.props.selectAllLabel) {\n\t\t\tselectAll = [{\n\t\t\t\tkey: this.props.selectAllLabel,\n\t\t\t}];\n\t\t}\n\n\t\treturn (\n\t\t\t<Container style={this.props.style} className={this.props.className}>\n\t\t\t\t{this.props.title && <Title className={getClassName(this.props.innerClass, 'title') || null}>{this.props.title}</Title>}\n\t\t\t\t<Dropdown\n\t\t\t\t\tinnerClass={this.props.innerClass}\n\t\t\t\t\titems={\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t...selectAll,\n\t\t\t\t\t\t\t...this.state.options\n\t\t\t\t\t\t\t\t.filter(item => String(item.key).trim().length)\n\t\t\t\t\t\t\t\t.map(item => ({ ...item, key: String(item.key) })),\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t\tonChange={this.setValue}\n\t\t\t\t\tselectedItem={this.state.currentValue}\n\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\tlabelField=\"key\"\n\t\t\t\t\tshowCount={this.props.showCount}\n\t\t\t\t\tthemePreset={this.props.themePreset}\n\t\t\t\t\trenderListItem={this.props.renderListItem}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nSingleDropdownList.propTypes = {\n\taddComponent: types.funcRequired,\n\tremoveComponent: types.funcRequired,\n\tsetQueryListener: types.funcRequired,\n\tsetQueryOptions: types.funcRequired,\n\tupdateQuery: types.funcRequired,\n\twatchComponent: types.funcRequired,\n\toptions: types.options,\n\tselectedValue: types.selectedValue,\n\t// component props\n\tbeforeValueChange: types.func,\n\tclassName: types.string,\n\tcomponentId: types.stringRequired,\n\tcustomQuery: types.func,\n\tdataField: types.stringRequired,\n\tdefaultSelected: types.string,\n\tfilterLabel: types.string,\n\tinnerClass: types.style,\n\tonQueryChange: types.func,\n\tonValueChange: types.func,\n\tplaceholder: types.string,\n\treact: types.react,\n\trenderListItem: types.func,\n\tselectAllLabel: types.string,\n\tshowCount: types.bool,\n\tshowFilter: types.bool,\n\tsize: types.number,\n\tsortBy: types.sortByWithCount,\n\tstyle: types.style,\n\ttitle: types.title,\n\tthemePreset: types.themePreset,\n\tURLParams: types.bool,\n\tshowMissing: types.bool,\n\tmissingLabel: types.string,\n};\n\nSingleDropdownList.defaultProps = {\n\tclassName: null,\n\tplaceholder: 'Select a value',\n\tshowCount: true,\n\tshowFilter: true,\n\tsize: 100,\n\tsortBy: 'count',\n\tstyle: {},\n\tURLParams: false,\n\tshowMissing: false,\n\tmissingLabel: 'N/A',\n};\n\nconst mapStateToProps = (state, props) => ({\n\toptions: state.aggregations[props.componentId],\n\tselectedValue: (state.selectedValues[props.componentId]\n\t\t&& state.selectedValues[props.componentId].value) || '',\n\tthemePreset: state.config.themePreset,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n\taddComponent: component => dispatch(addComponent(component)),\n\tremoveComponent: component => dispatch(removeComponent(component)),\n\tsetQueryOptions: (component, props) => dispatch(setQueryOptions(component, props)),\n\tsetQueryListener: (component, onQueryChange, beforeQueryChange) =>\n\t\tdispatch(setQueryListener(component, onQueryChange, beforeQueryChange)),\n\tupdateQuery: updateQueryObject => dispatch(updateQuery(updateQueryObject)),\n\twatchComponent: (component, react) => dispatch(watchComponent(component, react)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(SingleDropdownList);\n"]}