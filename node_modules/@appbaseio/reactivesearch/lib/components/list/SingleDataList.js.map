{"version":3,"sources":["../../../src/components/list/SingleDataList.js"],"names":["SingleDataList","props","state","currentValue","searchTerm","locked","setQueryListener","componentId","onQueryChange","componentWillMount","addComponent","setReact","selectedValue","setValue","defaultSelected","componentWillReceiveProps","nextProps","react","dataField","updateQuery","componentWillUnmount","removeComponent","watchComponent","render","selectAllLabel","data","length","style","className","title","innerClass","renderSearch","handleClick","showRadio","filter","item","showSearch","label","toLowerCase","includes","map","defaultQuery","value","exists","field","term","nextValue","beforeValueChange","performUpdate","setState","onValueChange","query","customQuery","find","filterLabel","showFilter","URLParams","handleInputChange","e","target","placeholder","margin","themePreset","propTypes","funcRequired","func","string","stringRequired","bool","boolRequired","defaultProps","mapStateToProps","selectedValues","config","mapDispatchtoProps","dispatch","component","updateQueryObject","beforeQueryChange"],"mappings":"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","file":"SingleDataList.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n\taddComponent,\n\tremoveComponent,\n\twatchComponent,\n\tupdateQuery,\n\tsetQueryListener,\n} from '@appbaseio/reactivecore/lib/actions';\nimport {\n\tcheckValueChange,\n\tcheckPropChange,\n\tgetClassName,\n} from '@appbaseio/reactivecore/lib/utils/helper';\n\nimport types from '@appbaseio/reactivecore/lib/utils/types';\n\nimport Title from '../../styles/Title';\nimport Input from '../../styles/Input';\nimport Container from '../../styles/Container';\nimport { UL, Radio } from '../../styles/FormControlList';\nimport { connect } from '../../utils';\n\nclass SingleDataList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrentValue: null,\n\t\t\tsearchTerm: '',\n\t\t};\n\t\tthis.locked = false;\n\t\tprops.setQueryListener(props.componentId, props.onQueryChange, null);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.props.addComponent(this.props.componentId);\n\n\t\tthis.setReact(this.props);\n\n\t\tif (this.props.selectedValue) {\n\t\t\tthis.setValue(this.props.selectedValue);\n\t\t} else if (this.props.defaultSelected) {\n\t\t\tthis.setValue(this.props.defaultSelected);\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tcheckPropChange(\n\t\t\tthis.props.react,\n\t\t\tnextProps.react,\n\t\t\t() => this.setReact(nextProps),\n\t\t);\n\n\t\tcheckPropChange(\n\t\t\tthis.props.dataField,\n\t\t\tnextProps.dataField,\n\t\t\t() => {\n\t\t\t\tthis.updateQuery(this.state.currentValue, nextProps);\n\t\t\t},\n\t\t);\n\n\t\tif (this.props.defaultSelected !== nextProps.defaultSelected) {\n\t\t\tthis.setValue(nextProps.defaultSelected);\n\t\t} else if (this.state.currentValue !== nextProps.selectedValue) {\n\t\t\tthis.setValue(nextProps.selectedValue || '');\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.removeComponent(this.props.componentId);\n\t}\n\n\tsetReact(props) {\n\t\tif (props.react) {\n\t\t\tprops.watchComponent(props.componentId, props.react);\n\t\t}\n\t}\n\n\tstatic defaultQuery = (value, props) => {\n\t\tif (props.selectAllLabel && props.selectAllLabel === value) {\n\t\t\treturn {\n\t\t\t\texists: {\n\t\t\t\t\tfield: props.dataField,\n\t\t\t\t},\n\t\t\t};\n\t\t} else if (value) {\n\t\t\treturn {\n\t\t\t\tterm: {\n\t\t\t\t\t[props.dataField]: value,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t};\n\n\tsetValue = (nextValue, props = this.props) => {\n\t\t// ignore state updates when component is locked\n\t\tif (props.beforeValueChange && this.locked) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.locked = true;\n\t\tlet value = nextValue;\n\t\tif (nextValue === this.state.currentValue) {\n\t\t\tvalue = null;\n\t\t}\n\n\t\tconst performUpdate = () => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentValue: value,\n\t\t\t}, () => {\n\t\t\t\tthis.updateQuery(value, props);\n\t\t\t\tthis.locked = false;\n\t\t\t\tif (props.onValueChange) props.onValueChange(value);\n\t\t\t});\n\t\t};\n\n\t\tcheckValueChange(\n\t\t\tprops.componentId,\n\t\t\tvalue,\n\t\t\tprops.beforeValueChange,\n\t\t\tperformUpdate,\n\t\t);\n\t};\n\n\tupdateQuery = (value, props) => {\n\t\tconst query = props.customQuery || SingleDataList.defaultQuery;\n\n\t\tlet currentValue = value;\n\t\tif (value !== props.selectAllLabel) {\n\t\t\tcurrentValue = props.data.find(item => item.label === value);\n\t\t\tcurrentValue = currentValue ? currentValue.value : null;\n\t\t}\n\n\t\tprops.updateQuery({\n\t\t\tcomponentId: props.componentId,\n\t\t\tquery: query(currentValue, props),\n\t\t\tvalue: currentValue ? value : null,\n\t\t\tlabel: props.filterLabel,\n\t\t\tshowFilter: props.showFilter,\n\t\t\tURLParams: props.URLParams,\n\t\t});\n\t};\n\n\thandleInputChange = (e) => {\n\t\tconst { value } = e.target;\n\t\tthis.setState({\n\t\t\tsearchTerm: value,\n\t\t});\n\t};\n\n\trenderSearch = () => {\n\t\tif (this.props.showSearch) {\n\t\t\treturn (<Input\n\t\t\t\tclassName={getClassName(this.props.innerClass, 'input') || null}\n\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\tvalue={this.state.searchTerm}\n\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\tstyle={{\n\t\t\t\t\tmargin: '0 0 8px',\n\t\t\t\t}}\n\t\t\t\tthemePreset={this.props.themePreset}\n\t\t\t/>);\n\t\t}\n\t\treturn null;\n\t};\n\n\thandleClick = (e) => {\n\t\tthis.setValue(e.target.value);\n\t};\n\n\trender() {\n\t\tconst { selectAllLabel } = this.props;\n\n\t\tif (this.props.data.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<Container style={this.props.style} className={this.props.className}>\n\t\t\t\t{this.props.title && <Title className={getClassName(this.props.innerClass, 'title') || null}>{this.props.title}</Title>}\n\t\t\t\t{this.renderSearch()}\n\t\t\t\t<UL className={getClassName(this.props.innerClass, 'list') || null}>\n\t\t\t\t\t{\n\t\t\t\t\t\tselectAllLabel\n\t\t\t\t\t\t\t&& (\n\t\t\t\t\t\t\t\t<li key={selectAllLabel} className={`${this.state.currentValue === selectAllLabel ? 'active' : ''}`}>\n\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'radio')}\n\t\t\t\t\t\t\t\t\t\tid={`${this.props.componentId}-${selectAllLabel}`}\n\t\t\t\t\t\t\t\t\t\tname={this.props.componentId}\n\t\t\t\t\t\t\t\t\t\tvalue={selectAllLabel}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleClick}\n\t\t\t\t\t\t\t\t\t\tchecked={this.state.currentValue === selectAllLabel}\n\t\t\t\t\t\t\t\t\t\tshow={this.props.showRadio}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'label') || null}\n\t\t\t\t\t\t\t\t\t\thtmlFor={`${this.props.componentId}-${selectAllLabel}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{selectAllLabel}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.data\n\t\t\t\t\t\t\t.filter((item) => {\n\t\t\t\t\t\t\t\tif (this.props.showSearch && this.state.searchTerm) {\n\t\t\t\t\t\t\t\t\treturn item.label.toLowerCase().includes(this.state.searchTerm.toLowerCase());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.map(item => (\n\t\t\t\t\t\t\t\t<li key={item.label} className={`${this.state.currentValue === item.label ? 'active' : ''}`}>\n\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'radio')}\n\t\t\t\t\t\t\t\t\t\tid={`${this.props.componentId}-${item.label}`}\n\t\t\t\t\t\t\t\t\t\tname={this.props.componentId}\n\t\t\t\t\t\t\t\t\t\tvalue={item.label}\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\t\t\t\tchecked={this.state.currentValue === item.label}\n\t\t\t\t\t\t\t\t\t\tshow={this.props.showRadio}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\tclassName={getClassName(this.props.innerClass, 'label') || null}\n\t\t\t\t\t\t\t\t\t\thtmlFor={`${this.props.componentId}-${item.label}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</UL>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nSingleDataList.propTypes = {\n\taddComponent: types.funcRequired,\n\tremoveComponent: types.funcRequired,\n\tsetQueryListener: types.funcRequired,\n\tupdateQuery: types.funcRequired,\n\twatchComponent: types.funcRequired,\n\tselectedValue: types.selectedValue,\n\t// component props\n\tbeforeValueChange: types.func,\n\tclassName: types.string,\n\tcomponentId: types.stringRequired,\n\tcustomQuery: types.func,\n\tdata: types.data,\n\tdataField: types.stringRequired,\n\tdefaultSelected: types.string,\n\tfilterLabel: types.string,\n\tinnerClass: types.style,\n\tonQueryChange: types.func,\n\tonValueChange: types.func,\n\tplaceholder: types.string,\n\treact: types.react,\n\tselectAllLabel: types.string,\n\tshowFilter: types.bool,\n\tshowRadio: types.boolRequired,\n\tshowSearch: types.bool,\n\tstyle: types.style,\n\tthemePreset: types.themePreset,\n\ttitle: types.title,\n\tURLParams: types.bool,\n};\n\nSingleDataList.defaultProps = {\n\tclassName: null,\n\tplaceholder: 'Search',\n\tshowFilter: true,\n\tshowRadio: true,\n\tshowSearch: true,\n\tstyle: {},\n\tURLParams: false,\n};\n\nconst mapStateToProps = (state, props) => ({\n\tselectedValue: (state.selectedValues[props.componentId]\n\t\t&& state.selectedValues[props.componentId].value) || null,\n\tthemePreset: state.config.themePreset,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n\taddComponent: component => dispatch(addComponent(component)),\n\tremoveComponent: component => dispatch(removeComponent(component)),\n\tupdateQuery: updateQueryObject => dispatch(updateQuery(updateQueryObject)),\n\twatchComponent: (component, react) => dispatch(watchComponent(component, react)),\n\tsetQueryListener: (component, onQueryChange, beforeQueryChange) =>\n\t\tdispatch(setQueryListener(component, onQueryChange, beforeQueryChange)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(SingleDataList);\n"]}